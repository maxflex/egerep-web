{"version":3,"sources":["app.coffee","controllers/_template.coffee","controllers/index.coffee","controllers/tutors.coffee","resources/resources.coffee","directives/comments.coffee","directives/email.coffee","directives/icheck.coffee","directives/input-comment.coffee","directives/metro-list.coffee","directives/multi-select.coffee","directives/pencil-input.coffee","directives/phone-field.coffee","directives/phones.coffee","directives/plural.coffee","directives/plus.coffee","directives/select.coffee","directives/sms.coffee","directives/tutor-photo.coffee","directives/user-switch.coffee","directives/user.coffee","factory/factory.coffee","service/crud.coffee"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["angular.module(\"Egerep\", ['ngSanitize', 'ngResource', 'ngAnimate', 'angular-ladda', 'angular-inview'])\n    .config [\n        '$compileProvider'\n        ($compileProvider) ->\n            $compileProvider.aHrefSanitizationWhitelist /^\\s*(https?|ftp|mailto|chrome-extension|sip):/\n\t]\n    .config (laddaProvider) ->\n        laddaProvider.setOption\n            spinnerColor: '#83b060'\n    .filter 'cut', ->\n      (value, wordwise, max, nothing = '', tail) ->\n        if !value\n          return nothing\n        max = parseInt(max, 10)\n        if !max\n          return value\n        if value.length <= max\n          return value\n        value = value.substr(0, max)\n        if wordwise\n          lastspace = value.lastIndexOf(' ')\n          if lastspace != -1\n            #Also remove . and , so its gives a cleaner result.\n            if value.charAt(lastspace - 1) == '.' or value.charAt(lastspace - 1) == ','\n              lastspace = lastspace - 1\n            value = value.substr(0, lastspace)\n        value + (tail or '…')\n    .filter 'hideZero', ->\n        (item) ->\n            if item > 0 then item else null\n    .run ($rootScope, $q) ->\n        # отвечает за загрузку данных\n        $rootScope.dataLoaded = $q.defer()\n        # конец анимации front-end загрузки и rebind маск\n        $rootScope.frontendStop = (rebind_masks = true) ->\n            $rootScope.frontend_loading = false\n            $rootScope.dataLoaded.resolve(true)\n            rebindMasks() if rebind_masks\n\n        $rootScope.range = (min, max, step) ->\n          step = step or 1\n          input = []\n          i = min\n          while i <= max\n            input.push i\n            i += step\n          input\n\n          # skip_values – какие значения в enum пропускать\n          # allowed_user_ids – пользователи, которым разрешено выбирать значения\n          # recursion – функция была запущена рекурсивно (внизу)\n        $rootScope.toggleEnum = (ngModel, status, ngEnum, skip_values = [], allowed_user_ids = [], recursion = false) ->\n            # если установлено значение, которое пропускается для обычных пользователей,\n            # то запрещать его смену\n            return if not recursion and parseInt(ngModel[status]) in skip_values and $rootScope.$$childHead.user.id not in allowed_user_ids\n\n            statuses = Object.keys(ngEnum)\n            status_id = statuses.indexOf ngModel[status].toString()\n            status_id++\n            status_id = 0 if status_id > (statuses.length - 1)\n            ngModel[status] = statuses[status_id]\n            # if in skip_values\n            $rootScope.toggleEnum(ngModel, status, ngEnum, skip_values, allowed_user_ids, true) if status_id in skip_values and $rootScope.$$childHead.user.id not in allowed_user_ids\n\n        # обновить + ждать ответа от сервера\n        $rootScope.toggleEnumServer = (ngModel, status, ngEnum, Resource) ->\n            statuses = Object.keys(ngEnum)\n            status_id = statuses.indexOf ngModel[status].toString()\n            status_id++\n            status_id = 0 if status_id > (statuses.length - 1)\n\n            update_data = {id: ngModel.id}\n            update_data[status] = status_id\n\n            Resource.update update_data, ->\n                ngModel[status] = statuses[status_id]\n\n        $rootScope.formatDateTime = (date) ->\n            moment(date).format \"DD.MM.YY в HH:mm\"\n\n        $rootScope.formatDate = (date, full_year = false) ->\n            return '' if not date\n            moment(date).format \"DD.MM.YY\" + (if full_year then \"YY\" else \"\")\n\n        $rootScope.dialog = (id) ->\n            $(\"##{id}\").modal 'show'\n            return\n\n        $rootScope.closeDialog = (id) ->\n            $(\"##{id}\").modal 'hide'\n            return\n\n        $rootScope.ajaxStart = ->\n            ajaxStart()\n            $rootScope.saving = true\n\n        $rootScope.ajaxEnd = ->\n            ajaxEnd()\n            $rootScope.saving = false\n\n        $rootScope.findById = (object, id) ->\n            _.findWhere(object, {id: parseInt(id)})\n\n        # prop2 – второй уровень вложенности\n        $rootScope.total = (array, prop, prop2 = false) ->\n            sum = 0\n            $.each array, (index, value) ->\n                v = value[prop]\n                v = v[prop2] if prop2\n                sum += v\n            sum\n\n        # сколько лет прошло с указанной даты\n        $rootScope.yearsPassed = (year) ->\n            moment().format(\"YYYY\") - year\n\n        $rootScope.deny = (ngModel, prop) ->\n            ngModel[prop] = +(!ngModel[prop])\n\n        $rootScope.formatBytes = (bytes) ->\n          if bytes < 1024\n            bytes + ' Bytes'\n          else if bytes < 1048576\n            (bytes / 1024).toFixed(1) + ' KB'\n          else if bytes < 1073741824\n            (bytes / 1048576).toFixed(1) + ' MB'\n          else\n            (bytes / 1073741824).toFixed(1) + ' GB'\n","# angular\n#     .module 'Egerep'\n#     .controller 'VariablesIndex', ($scope, $attrs, IndexService, Variable) ->\n#         bindArguments($scope, arguments)\n#         angular.element(document).ready ->\n#             IndexService.init(Variable, $scope.current_page, $attrs)\n#     .controller 'VariablesForm', ($scope, $attrs, $timeout, FormService, Variable) ->\n#         bindArguments($scope, arguments)\n#         angular.element(document).ready ->\n#             FormService.init(Variable, $scope.id, $scope.model)\n","angular\n.module 'Egerep'\n.controller 'Index', ($scope, Tutor) ->\n\tbindArguments($scope, arguments)\n\n\t$scope.getSubjects = (tutor) ->\n\t\tif 'string' is typeof tutor.subjects\n\t\t\tsubject_ids = tutor.subjects.split(',').map (id)->\n\t\t\t\t+id\n\t\telse\n\t\t\tsubject_ids = tutor.subjects\n\n\t\t_.filter $scope.subjects, (subject) ->\n\t\t\tsubject_ids.indexOf(subject.id) != -1\n","angular\n    .module 'Egerep'\n    .constant 'REVIEWS_PER_PAGE', 5\n    .controller 'Tutors', ($scope, $timeout, Tutor, Request, REVIEWS_PER_PAGE) ->\n        bindArguments($scope, arguments)\n\n        # страница преподавателя\n        if window.location.pathname.indexOf('/tutor/') is 0\n            console.log 'here'\n        else\n        # страница поиска\n            $timeout ->\n                $scope.chunked_subjects = chunk(toArray($scope.subjects), 4)\n                metroAutocomplete($scope)\n                $scope.filter() if not parseInt($scope.search.station_id)\n\n        # пары предметов\n        $scope.pairs = [\n            [1, 2]\n            [3, 4]\n            [6, 7]\n            [8, 9]\n        ]\n\n        # просмотренные преподаватели (чтобы не засчитывались просмотры несколько раз)\n        viewed_tutors = []\n\n        # личная страница преподавателя?\n        $scope.profilePage = (url) ->\n            url is 'tutor'\n\n        # отправить заявку\n        $scope.request = (tutor) ->\n            tutor.request.tutor_id = tutor.id\n            Request.save tutor.request, ->\n                tutor.request_sent = true\n            console.log tutor\n\n        # сотрудничает с 12 сентября 2000 года\n        $scope.dateToText = (date) ->\n            text_date = moment(date).format 'DD MMMM YYYY'\n            # вырезаем дату, оставляем месяц и год\n            # нужно именно так, чтобы осталось правильное склонение месяца\n            text_date.substr(3)\n\n        $scope.gmap = (tutor) ->\n            if tutor.map_shown is undefined then $timeout ->\n                map = new google.maps.Map document.getElementById(\"gmap-#{tutor.id}\"),\n                    center: MAP_CENTER\n                    scrollwheel: false,\n                    zoom: 8\n                    disableDefaultUI: true\n                    clickableLabels: false\n                    clickableIcons: false\n                    zoomControl: true\n                    scaleControl: true\n\n                bounds = new (google.maps.LatLngBounds)\n                tutor.markers.forEach (marker) ->\n                    bounds.extend(new google.maps.LatLng(marker.lat, marker.lng))\n                    new_marker = newMarker(new google.maps.LatLng(marker.lat, marker.lng), map)\n\n                # one marker bug fix\n                if bounds.getNorthEast().equals(bounds.getSouthWest())\n                    extendPoint1 = new google.maps.LatLng(bounds.getNorthEast().lat() + 0.02, bounds.getNorthEast().lng() + 0.02)\n                    extendPoint2 = new google.maps.LatLng(bounds.getNorthEast().lat() - 0.02, bounds.getNorthEast().lng() - 0.02)\n                    bounds.extend(extendPoint1)\n                    bounds.extend(extendPoint2)\n\n                map.fitBounds bounds\n                map.panToBounds bounds\n                map.setZoom 12\n\n            $scope.toggleShow(tutor, 'map_shown', 'gmap')\n\n        $scope.getMetros = (tutor) ->\n            _.chain(tutor.markers).pluck('metros').flatten().value()\n\n        $scope.reviews = (tutor) ->\n            Tutor.iteraction {id: tutor.id, type: 'reviews'}\n            if tutor.all_reviews is undefined\n                tutor.all_reviews = Tutor.reviews\n                    id: tutor.id\n                , (response) ->\n                    $scope.showMoreReviews(tutor)\n            $scope.toggleShow(tutor, 'show_reviews', 'all_reviews')\n\n        $scope.showMoreReviews = (tutor) ->\n            Tutor.iteraction {id: tutor.id, type: 'reviews_more'}\n            tutor.reviews_page = if not tutor.reviews_page then 1 else (tutor.reviews_page + 1)\n            from = (tutor.reviews_page - 1) * REVIEWS_PER_PAGE\n            to = from + REVIEWS_PER_PAGE\n            tutor.displayed_reviews = tutor.all_reviews.slice(0, to)\n\n        $scope.reviewsLeft = (tutor) ->\n            tutor.all_reviews.length - tutor.displayed_reviews.length\n\n        $scope.countView = (tutor_id) ->\n            if viewed_tutors.indexOf(tutor_id) is -1\n                Tutor.iteraction {id: tutor_id, type: 'views'}\n                viewed_tutors.push tutor_id\n\n        $scope.filter = (subject_id) ->\n            $scope.tutors = []\n            unselectSubjects(subject_id)\n            $scope.page = 1\n            search()\n\n        $scope.nextPage = ->\n            $scope.page++\n            search()\n\n        $scope.isLastPage = ->\n            return if not $scope.data\n            $scope.data.current_page >= $scope.data.last_page\n\n        unselectSubjects = (subject_id) ->\n            if subject_id\n                angular.forEach $scope.search.subjects, (enabled, id) ->\n                    pair = _.filter scope.pairs, (p) ->\n                        p.indexOf(parseInt(subject_id)) isnt -1\n                    pair.push([subject_id]) if not pair.length\n                    $scope.search.subjects[id] = false if pair[0].indexOf(parseInt(id)) is -1\n\n        search = ->\n            $scope.searching = true\n            Tutor.search\n                page: $scope.page\n                search: $scope.search\n            , (response) ->\n                $scope.searching = false\n                if response.hasOwnProperty('url')\n                    redirect response.url\n                else\n                    $scope.data = response\n                    $scope.tutors = $scope.tutors.concat(response.data)\n                    #comma separated fields\n                    angular.forEach $scope.tutors, (tutor) ->\n                        tutor.svg_map = _.filter tutor.svg_map.split(',') if 'string' == typeof tutor.svg_map\n\n        $scope.clearMetro = ->\n            $('.search-metro-autocomplete').val('')\n            $('.search-filter-metro-wrap').removeClass('active')\n            $scope.search.station_id = 0\n            $scope.filter()\n\n        $scope.showSvg = (tutor) ->\n            if tutor.show_svg is undefined\n                map = new SVGMap\n                    iframeId: 'svg-iframe-'+tutor.id\n                    clicable: false\n                    places: $scope.svg\n                map.init()\n                map.deselectAll()\n                map.select(tutor.svg_map)\n                # $(document.getElementById('svg-iframe-'+tutor.id).contentWindow.document).keydown (e) ->\n                #     if e.keyCode == 27\n                #         setTimeout ->\n                #             $('#svg-' + tutor.id).hide()\n                #         , 200\n                # return\n            $scope.toggleShow(tutor, 'show_svg', 'svg_map')\n\n        $scope.toggleShow = (tutor, prop, iteraction_type) ->\n            if tutor[prop]\n                tutor[prop] = false\n            else\n                tutor[prop] = true\n                Tutor.iteraction {id: tutor.id, type: iteraction_type}\n\n        $scope.subjectsLink = (tutor) ->\n            link = ['tutors']\n            tutor.subjects.forEach (subject_id) ->\n                link.push $scope.subjects[subject_id].eng\n            '/' + link.join('-')\n","angular.module('Egerep')\n    .factory 'Tutor', ($resource) ->\n        $resource apiPath('tutors'), {id: '@id', type: '@type'},\n            search:\n                method: 'POST'\n                url: apiPath('tutors', 'search')\n            reviews:\n                method: 'GET'\n                isArray: true\n                url: apiPath('tutors', 'reviews')\n            iteraction:\n                method: 'GET'\n                url: \"/api/tutors/iteraction/:id/:type\"\n\n    .factory 'Request', ($resource) ->\n        $resource apiPath('requests'), {id: '@id'}, updatable()\n\napiPath = (entity, additional = '') ->\n    \"/api/#{entity}/\" + (if additional then additional + '/' else '') + \":id\"\n\n\nupdatable = ->\n    update:\n        method: 'PUT'\ncountable = ->\n    count:\n        method: 'GET'\n","# angular.module('Egerep').directive 'comments', ->\n#     restrict: 'E'\n#     templateUrl: 'directives/comments'\n#     scope:\n#         user: '='\n#         entityId: '='\n#         trackLoading: '='\n#         entityType: '@'\n#     controller: ($rootScope, $scope, $timeout, Comment) ->\n#         $scope.show_max = 4                 # сколько комментов показывать в свернутом режиме\n#         $scope.show_all_comments = false    # показать все комментарии?\n#         $scope.is_dragging = false          # комментарий перетаскивается\n#\n#         bindDraggable = (comment_id) ->\n#             $(\"#comment-#{comment_id}\").draggable\n#                 revert: 'invalid'\n#                 activeClass: 'drag-active'\n#                 start: (e, ui) ->\n#                     $scope.is_dragging = true\n#                     $scope.$apply()\n#                 stop: (e, ui) ->\n#                     $scope.is_dragging = false\n#                     $scope.$apply()\n#\n#         $timeout ->\n#             $scope.comments.forEach (comment) ->\n#                 bindDraggable(comment.id)\n#             $(\"#comment-delete-#{$scope.entityType}-#{$scope.entityId}\").droppable\n#                 tolerance: 'pointer'\n#                 hoverClass: 'hovered'\n#                 drop: (e, ui) ->\n#                     $scope.remove($(ui.draggable).data('comment-id'))\n#         , 2000\n#\n#         $scope.showAllComments = ->\n#             $scope.show_all_comments = true\n#             $timeout ->\n#                 $scope.comments.forEach (comment) ->\n#                     bindDraggable(comment.id)\n#\n#         $scope.getComments = ->\n#             if ($scope.show_all_comments or $scope.comments.length <= $scope.show_max) then $scope.comments else _.last($scope.comments, $scope.show_max - 1)\n#\n#         # перезагружаем комменты, если меняется entity_id\n#         $scope.$watch 'entityId', (newVal, oldVal) ->\n#             $scope.comments = Comment.query\n#                 entity_type: $scope.entityType\n#                 entity_id: newVal\n#             , ->\n#                 $rootScope.loaded_comments++ if $scope.trackLoading\n#\n#         $scope.formatDateTime = (date) ->\n#             moment(date).format \"DD.MM.YY в HH:mm\"\n#\n#         $scope.startCommenting = (event) ->\n#             $scope.start_commenting = true\n#             $timeout ->\n#                 $(event.target).parent().find('input').focus()\n#\n#         $scope.endCommenting = ->\n#             $scope.comment = ''\n#             $scope.start_commenting = false\n#\n#         $scope.remove = (comment_id) ->\n#             _.find($scope.comments, {id: comment_id}).$remove()\n#             $scope.comments = _.without($scope.comments, _.findWhere($scope.comments, {id: comment_id}))\n#\n#         $scope.edit = (comment, event) ->\n#             old_text    = comment.comment\n#             element     = $(event.target)\n#\n#             element.unbind('keydown').unbind('blur')\n#\n#             element.attr('contenteditable', 'true').focus()\n#                 .on 'keydown', (e) ->\n#                     console.log old_text\n#                     if e.keyCode is 13\n#                         $(@).removeAttr('contenteditable').blur()\n#                         comment.comment = $(@).text()\n#                         comment.$update()\n#                     if e.keyCode is 27\n#                         $(@).blur()\n#\n#                 .on 'blur', (e) ->\n#                     if element.attr 'contenteditable'\n#                         console.log old_text\n#                         element.removeAttr('contenteditable').html old_text\n#             return\n#             # setEndOfContenteditable(event.target)\n#\n#         $scope.submitComment = (event) ->\n#             if event.keyCode is 13\n#                 new_comment = new Comment\n#                     comment: $scope.comment\n#                     user_id: $scope.user.id\n#                     entity_id: $scope.entityId\n#                     entity_type: $scope.entityType\n#                 new_comment.$save()\n#                     .then (response)->\n#                         console.log response\n#                         new_comment.user = $scope.user\n#                         new_comment.id = response.id\n#                         $scope.comments.push new_comment\n#                         $timeout ->\n#                             bindDraggable(new_comment.id)\n#                 $scope.endCommenting()\n#\n#             if event.keyCode is 27\n#                 $(event.target).blur()\n","# angular.module('Egerep').directive 'email', ->\n#     restrict: 'E'\n#     templateUrl: 'directives/email'\n#     scope:\n#         entity: '='\n#     controller: ($scope) ->\n#         $scope.send = ->\n#             $('#email-modal').modal 'show'\n#     # controller: ($scope, $timeout, Email) ->\n#     #     # массовая отправка?\n#     #     $scope.mass = false\n#     #\n#     #     # подсчитать СМС\n#     #     $scope.smsCount = ->\n#     #         SmsCounter.count($scope.message || '').messages\n#     #\n#     #     # отправить\n#     #     $scope.send = ->\n#     #         if $scope.message\n#     #             sms = new Sms\n#     #                 message: $scope.message\n#     #                 to: $scope.number\n#     #                 mass: $scope.mass\n#     #             sms.$save()\n#     #\n#     #     # подгружаем историю, если номер телефона меняется\n#     #     $scope.$watch 'number', (newVal, oldVal) ->\n#     #         console.log $scope.$parent.formatDateTime($scope.created_at)\n#     #         $scope.history = Sms.query({number: newVal}) if newVal\n","angular.module('Egerep').directive 'icheck', ($timeout, $parse) ->\n  {\n    require: 'ngModel'\n    link: ($scope, element, $attrs, ngModel) ->\n      $timeout ->\n        value = undefined\n        value = $attrs['value']\n        $scope.$watch $attrs['ngModel'], (newValue) ->\n          $(element).iCheck 'update'\n          return\n        $(element).iCheck(\n          checkboxClass: 'custom-checkbox',\n          radioClass: 'custom-radio',\n          checkedClass: 'checked',\n          cursor: true).on 'ifChanged', (event) ->\n          if $(element).attr('type') == 'checkbox' and $attrs['ngModel']\n            $scope.$apply ->\n              ngModel.$setViewValue event.target.checked\n          if $(element).attr('type') == 'radio' and $attrs['ngModel']\n            return $scope.$apply(->\n              ngModel.$setViewValue value\n            )\n          return\n\n  }\n","# angular.module('Egerep').directive 'inputComment', ->\n#     restrict: 'E'\n#     templateUrl: 'directives/input-comment'\n#     scope:\n#         entity: '='\n#         commentField: '@'\n#     controller: ($scope, $timeout) ->\n#         $scope.is_being_commented = false\n#\n#         $scope.blurComment = ->\n#             $scope.is_being_commented = false\n#\n#         $scope.focusComment = ->\n#             $scope.is_being_commented = true\n#\n#         $scope.startComment = (event) ->\n#             $scope.is_being_commented = true\n#             $timeout ->\n#                 $(event.target).parent().children('input').focus()\n#\n#         $scope.endComment =  (event) ->\n#             if event.keyCode is 13\n#                 $(event.target).blur()\n#                 return\n","# angular.module('Egerep').directive 'metroList', ->\n#     restrict: 'E'\n#     templateUrl: 'directives/metro-list'\n#     scope:\n#         markers: '='\n#     controller: ($scope, $element, $attrs) ->\n#         $scope.inline = $attrs.hasOwnProperty('inline')\n#         $scope.one_station = $attrs.hasOwnProperty('oneStation')\n#\n#         $scope.short = (title) ->\n#             title.slice(0,3).toUpperCase()\n#\n#         $scope.minutes = (minutes) ->\n#             Math.round minutes\n","# angular.module 'Egecms'\n#     .directive 'ngMulti', ->\n#         restrict: 'E'\n#         replace: true\n#         scope:\n#             object: '='\n#             model: '='\n#             label: '@'\n#             noneText: '@'\n#         templateUrl: 'directives/ngmulti'\n#         controller: ($scope, $element, $attrs, $timeout) ->\n#             $timeout ->\n#                 $($element).selectpicker\n#                     noneSelectedText: $scope.noneText\n#             , 100\n","# angular.module('Egerep').directive 'pencilInput', ->\n#     restrict: 'E'\n#     replace: true\n#     templateUrl: 'directives/pencil-input'\n#     scope:\n#         model: '='\n#     controller: ($scope, $timeout, $element, $controller) ->\n#         $scope.is_being_commented = false\n#\n#         $scope.blurComment = ->\n#             $scope.is_being_commented = false\n#\n#         $scope.focusComment = ->\n#             $scope.is_being_commented = true\n#\n#         $scope.startComment = (event) ->\n#             $scope.is_being_commented = true\n#             $timeout ->\n#                 $(event.target).parent().children('div').focus()\n#\n#         $scope.watchEnter = (event) ->\n#             if event.keyCode in [13, 27]\n#                 # @todo: надо изменить\n#                 if event.keyCode is 13\n#                     $scope.model = $(event.target).parent().children('div').text()\n#\n#                 $(event.target).parent().children('div').text($scope.model)\n#                 event.preventDefault()\n#                 $(event.target).blur()\n#             return\n","angular.module('Egerep')\n    .directive 'ngPhone', ->\n        restrict: 'A'\n        link: ($scope, element) ->\n            $(element).mask(\"+7 (999) 999-99-99\", { autoclear: false })\n","# angular.module('Egerep').directive 'phones', ->\n#     restrict: 'E'\n#     templateUrl: 'directives/phones'\n#     scope:\n#         entity: '='\n#     controller: ($scope, $timeout, $rootScope, PhoneService, UserService) ->\n#         $scope.PhoneService = PhoneService\n#         $scope.UserService  = UserService\n#\n#         console.log $scope.entityType\n#\n#         # level depth\n#         $rootScope.dataLoaded.promise.then (data) ->\n#             $scope.level = if $scope.entity.phones and $scope.entity.phones.length then $scope.entity.phones.length else 1\n#\n#         $scope.nextLevel = ->\n#             $scope.level++\n#\n#         $scope.phoneMaskControl = (event) ->\n#             el = $(event.target)\n#             # grabs string phone_2 from object model.phone2\n#             # so it can be accessible by key\n#             phone_id = el.attr('ng-model').split('.')[1]\n#             $scope.entity[phone_id] = $(event.target).val()\n#\n#         $scope.isFull = (number) ->\n#             return false if number is undefined or number is \"\"\n#             !number.match(/_/)\n#\n#         # отправить смс\n#         $scope.sms = (number) ->\n#             $('#sms-modal').modal 'show'\n#             $rootScope.sms_number = number\n#\n#         # информация по api\n#         $scope.info = (number) ->\n#             $scope.api_number = number\n#             $scope.mango_info = null\n#             $('#api-phone-info').modal 'show'\n#             PhoneService.info(number).then (response) ->\n#                 console.log response.data\n#                 $scope.mango_info = response.data\n#\n#         $scope.formatDateTime = (date) ->\n#             moment(date).format \"DD.MM.YY в HH:mm\"\n#\n#         $scope.time = (seconds) ->\n#             moment({}).seconds(seconds).format(\"mm:ss\")\n#\n#         $scope.getNumberTitle = (number) ->\n#             console.log number, $scope.api_number\n#             return 'текущий номер' if number is PhoneService.clean($scope.api_number)\n#             number\n#\n#         recodringLink = (recording_id) ->\n#             api_key   = 'goea67jyo7i63nf4xdtjn59npnfcee5l'\n#             api_salt  = 't9mp7vdltmhn0nhnq0x4vwha9ncdr8pa'\n#             timestamp = moment().add(5, 'minute').unix()\n#\n#             sha256 = new jsSHA('SHA-256', 'TEXT')\n#             sha256.update(api_key + timestamp + recording_id + api_salt)\n#             sign = sha256.getHash('HEX')\n#\n#             return \"https://app.mango-office.ru/vpbx/queries/recording/link/#{recording_id}/play/#{api_key}/#{timestamp}/#{sign}\"\n#\n#         $scope.play = (recording_id) ->\n#             $scope.audio.pause() if $scope.audio\n#             $scope.audio = new Audio recodringLink(recording_id)\n#             $scope.audio.play()\n#             $scope.is_playing = recording_id\n#\n#         $scope.isPlaying = (recording_id) ->\n#             $scope.is_playing is recording_id\n#\n#         $scope.stop = (recording_id) ->\n#             $scope.is_playing = null\n#             $scope.audio.pause()\n#\n#         $scope.disconnectReason = (data) ->\n#             # return 'НБТ' if data.to_extension is '' and data.disconnect_reason is '1100'\n#             data.disconnect_reason\n","angular.module 'Egerep'\n    .directive 'plural', ->\n        restrict: 'E'\n        scope:\n            count: '='      # кол-во\n            type: '@'       # тип plural age | student | ...\n            noneText: '@'   # текст, если кол-во равно нулю\n        templateUrl: '/directives/plural'\n        controller: ($scope, $element, $attrs, $timeout) ->\n            $scope.textOnly = $attrs.hasOwnProperty('textOnly')\n            $scope.hideZero = $attrs.hasOwnProperty('hideZero')\n\n            $scope.when =\n                'age': ['год', 'года', 'лет']\n                'student': ['ученик', 'ученика', 'учеников']\n                'minute': ['минуту', 'минуты', 'минут']\n                'hour': ['час', 'часа', 'часов']\n                'day': ['день', 'дня', 'дней']\n                'meeting': ['встреча', 'встречи', 'встреч']\n                'score': ['балл', 'балла', 'баллов']\n                'rubbles': ['рубль', 'рубля', 'рублей']\n                'lesson': ['занятие', 'занятия', 'занятий']\n                'client': ['клиент', 'клиента', 'клиентов']\n                'mark': ['оценки', 'оценок', 'оценок']\n                'review': ['отзыв', 'отзыва', 'отзывов']\n                'request': ['заявка', 'заявки', 'заявок']\n                'station': ['станцию', 'станции', 'станций']\n                'tutor': ['репетитор', 'репетитора', 'репетиторов']\n                'profile': ['анкета', 'анкеты', 'анкет']\n","# angular.module 'Egerep'\n#     .directive 'plus', ->\n#         restrict: 'E'\n#         scope:\n#             previous: '='\n#             count: '='\n#         templateUrl: 'directives/plus'\n","# angular.module 'Egecms'\n#     .directive 'ngSelect', ->\n#         restrict: 'E'\n#         replace: true\n#         scope:\n#             object: '='\n#             model: '='\n#             noneText: '@'\n#             label: '@'\n#         templateUrl: 'directives/ngselect'\n#         controller: ($scope, $element, $attrs, $timeout) ->\n#             # выбираем первое значение по умолчанию, если нет noneText\n#             if not $scope.noneText\n#                 $scope.model = _.first Object.keys($scope.object)\n#\n#             $timeout ->\n#                 $($element).selectpicker()\n#             , 100\n","# angular.module('Egerep').directive 'sms', ->\n#     restrict: 'E'\n#     templateUrl: 'directives/sms'\n#     scope:\n#         number: '='\n#     controller: ($scope, $timeout, Sms) ->\n#         # массовая отправка?\n#         $scope.mass = false\n#\n#         # подсчитать СМС\n#         $scope.smsCount = ->\n#             SmsCounter.count($scope.message || '').messages\n#\n#         # отправить\n#         $scope.send = ->\n#             if $scope.message\n#                 sms = new Sms\n#                     message: $scope.message\n#                     to: $scope.number\n#                     mass: $scope.mass\n#                 sms.$save()\n#                     .then (data) ->\n#                         $scope.history.push(data)\n#                         scrollDown()\n#\n#         # подгружаем историю, если номер телефона меняется\n#         $scope.$watch 'number', (newVal, oldVal) ->\n#             console.log $scope.$parent.formatDateTime($scope.created_at)\n#             $scope.history = Sms.query({number: newVal}) if newVal\n#             scrollDown()\n#\n#         scrollDown = ->\n#             $timeout ->\n#                 $(\"#sms-history\").animate({ scrollTop: $(window).height() }, \"fast\");\n","# angular.module 'Egerep'\n#     .directive 'tutorPhoto', ->\n#         restrict: 'E'\n#         replace: true\n#         scope:\n#             tutor: '='\n#             version: '='\n#         templateUrl: 'directives/tutor-photo'\n","# #\n# # Dependencies: UserService should be available in parent scope!\n# #\n#\n# angular.module 'Egerep'\n#     .directive 'userSwitch', ->\n#         restrict: 'E'\n#         scope:\n#             entity: '='\n#             resource: '='\n#             userId: '@'\n#         templateUrl: 'directives/user-switch'\n#         controller: ($scope) ->\n#             $scope.UserService = $scope.$parent.UserService\n","# angular.module 'Egerep'\n#     .directive 'user', ->\n#         restrict: 'E'\n#         scope:\n#             model: '='      # кол-во\n#         templateUrl: 'directives/user'\n","# angular.module('Egerep')\n#     .value 'Sort', [\n#         {id: 1, title: 'по цене – сначала дороже'}\n#         {id: 2, title: 'по цене – сначала дешевле'}\n#         {id: 3, title: 'по популярности'}\n#         {id: 4, title: 'по близости к метро'}\n#     ]\n","# angular.module 'Egecms'\n#     .service 'IndexService', ($rootScope) ->\n#         this.max_size = 30\n#\n#         this.init = (Resource, current_page, attrs) ->\n#             $rootScope.frontend_loading = true\n#             this.Resource = Resource\n#             this.current_page = parseInt(current_page)\n#             this.controller = attrs.ngController.toLowerCase().slice(0, -5)\n#             this.loadPage()\n#\n#         this.loadPage = ->\n#             this.Resource.get\n#                 page: this.current_page\n#             , (response) =>\n#                 this.page = response\n#                 $rootScope.frontend_loading = false\n#\n#         this.pageChanged = ->\n#             $rootScope.frontend_loading = true\n#             this.loadPage()\n#             this.changeUrl()\n#\n#         # change browser user / history push\n#         this.changeUrl = ->\n#             window.history.pushState('', '', this.controller + '?page=' + this.current_page)\n#\n#         this\n#     .service 'FormService', ($rootScope, $q, $timeout) ->\n#         this.init = (Resource, id, model) ->\n#             this.dataLoaded = $q.defer()\n#             $rootScope.frontend_loading = true\n#             this.Resource = Resource\n#             this.saving = false\n#             if id\n#                 this.model = Resource.get({id: id}, => modelLoaded())\n#             else\n#                 this.model = new Resource()\n#                 modelLoaded()\n#\n#\n#         modelLoaded = =>\n#             $rootScope.frontend_loading = false\n#             $timeout =>\n#                 this.dataLoaded.resolve(true)\n#\n#         beforeSave = =>\n#             ajaxStart()\n#             this.beforeSave() if this.beforeSave isnt undefined\n#             this.saving = true\n#\n#         this.edit = ->\n#             beforeSave()\n#             this.model.$update().then =>\n#                 this.saving = false\n#                 ajaxEnd()\n#\n#         this.create = ->\n#             beforeSave()\n#             this.model.$save().then (response) =>\n#                 # вырезаем MODEL из url типа /website/model/create\n#                 l = window.location.pathname.split('/')\n#                 redirect l[l.length - 2] + \"/#{response.id}/edit\"\n#\n#         this\n"],"sourceRoot":"/source/"}