{"version":3,"sources":["app.coffee","controllers/cv.coffee","controllers/index.coffee","controllers/login.coffee","controllers/tutors.coffee","controllers/_template.coffee","factory/factory.coffee","directives/comments.coffee","directives/email.coffee","directives/errors.coffee","directives/icheck.coffee","directives/input-comment.coffee","directives/multi-select.coffee","directives/pencil-input.coffee","directives/phone-field.coffee","directives/phones.coffee","directives/plural.coffee","directives/plus.coffee","directives/request-form.coffee","directives/select.coffee","directives/sms.coffee","directives/subject-list.coffee","directives/tutor-name.coffee","directives/tutor-photo.coffee","directives/user-switch.coffee","directives/user.coffee","resources/resources.coffee","service/phone.coffee","service/subject.coffee"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["angular.module(\"Egerep\", ['ngResource', 'angular-ladda', 'angular-inview', 'angularFileUpload', 'angular-toArrayFilter'])\r\n    .config [\r\n        '$compileProvider'\r\n        ($compileProvider) ->\r\n            $compileProvider.aHrefSanitizationWhitelist /^\\s*(https?|ftp|mailto|chrome-extension|sip):/\r\n\t]\r\n    .config (laddaProvider) ->\r\n        laddaProvider.setOption\r\n            spinnerColor: '#83b060'\r\n    .filter 'cut', ->\r\n      (value, wordwise, max, nothing = '', tail) ->\r\n        if !value\r\n          return nothing\r\n        max = parseInt(max, 10)\r\n        if !max\r\n          return value\r\n        if value.length <= max\r\n          return value\r\n        value = value.substr(0, max)\r\n        if wordwise\r\n          lastspace = value.lastIndexOf(' ')\r\n          if lastspace != -1\r\n            #Also remove . and , so its gives a cleaner result.\r\n            if value.charAt(lastspace - 1) == '.' or value.charAt(lastspace - 1) == ','\r\n              lastspace = lastspace - 1\r\n            value = value.substr(0, lastspace)\r\n        value + (tail or '…')\r\n    .filter 'hideZero', ->\r\n        (item) ->\r\n            if item > 0 then item else null\r\n    .run ($rootScope, $q) ->\r\n        # отвечает за загрузку данных\r\n        $rootScope.dataLoaded = $q.defer()\r\n        # конец анимации front-end загрузки и rebind маск\r\n        $rootScope.frontendStop = (rebind_masks = true) ->\r\n            $rootScope.frontend_loading = false\r\n            $rootScope.dataLoaded.resolve(true)\r\n            rebindMasks() if rebind_masks\r\n\r\n        $rootScope.range = (min, max, step) ->\r\n          step = step or 1\r\n          input = []\r\n          i = min\r\n          while i <= max\r\n            input.push i\r\n            i += step\r\n          input\r\n\r\n          # skip_values – какие значения в enum пропускать\r\n          # allowed_user_ids – пользователи, которым разрешено выбирать значения\r\n          # recursion – функция была запущена рекурсивно (внизу)\r\n        $rootScope.toggleEnum = (ngModel, status, ngEnum, skip_values = [], allowed_user_ids = [], recursion = false) ->\r\n            # если установлено значение, которое пропускается для обычных пользователей,\r\n            # то запрещать его смену\r\n            return if not recursion and parseInt(ngModel[status]) in skip_values and $rootScope.$$childHead.user.id not in allowed_user_ids\r\n\r\n            statuses = Object.keys(ngEnum)\r\n            status_id = statuses.indexOf ngModel[status].toString()\r\n            status_id++\r\n            status_id = 0 if status_id > (statuses.length - 1)\r\n            ngModel[status] = statuses[status_id]\r\n            # if in skip_values\r\n            $rootScope.toggleEnum(ngModel, status, ngEnum, skip_values, allowed_user_ids, true) if status_id in skip_values and $rootScope.$$childHead.user.id not in allowed_user_ids\r\n\r\n        # обновить + ждать ответа от сервера\r\n        $rootScope.toggleEnumServer = (ngModel, status, ngEnum, Resource) ->\r\n            statuses = Object.keys(ngEnum)\r\n            status_id = statuses.indexOf ngModel[status].toString()\r\n            status_id++\r\n            status_id = 0 if status_id > (statuses.length - 1)\r\n\r\n            update_data = {id: ngModel.id}\r\n            update_data[status] = status_id\r\n\r\n            Resource.update update_data, ->\r\n                ngModel[status] = statuses[status_id]\r\n\r\n        $rootScope.formatDateTime = (date) ->\r\n            moment(date).format \"DD.MM.YY в HH:mm\"\r\n\r\n        $rootScope.formatDate = (date, full_year = false) ->\r\n            return '' if not date\r\n            moment(date).format \"DD.MM.YY\" + (if full_year then \"YY\" else \"\")\r\n\r\n        $rootScope.formatDateFull = (date) ->\r\n            moment(date).format \"D MMMM YYYY\"\r\n\r\n        $rootScope.dialog = (id) ->\r\n            $(\"##{id}\").modal 'show'\r\n            return\r\n\r\n        $rootScope.closeDialog = (id) ->\r\n            $(\"##{id}\").modal 'hide'\r\n            return\r\n\r\n        $rootScope.onEnter = (event, fun, prevent_default = true) ->\r\n            event.preventDefault() if prevent_default\r\n            fun() if event.keyCode is 13\r\n\r\n        $rootScope.ajaxStart = ->\r\n            ajaxStart()\r\n            $rootScope.saving = true\r\n\r\n        $rootScope.ajaxEnd = ->\r\n            ajaxEnd()\r\n            $rootScope.saving = false\r\n\r\n        $rootScope.findById = (object, id) ->\r\n            _.findWhere(object, {id: parseInt(id)})\r\n\r\n        # prop2 – второй уровень вложенности\r\n        $rootScope.total = (array, prop, prop2 = false) ->\r\n            sum = 0\r\n            $.each array, (index, value) ->\r\n                v = value[prop]\r\n                v = v[prop2] if prop2\r\n                sum += v\r\n            sum\r\n\r\n        # сколько лет прошло с указанной даты\r\n        $rootScope.yearsPassed = (year) ->\r\n            moment().format(\"YYYY\") - year\r\n\r\n        $rootScope.deny = (ngModel, prop) ->\r\n            ngModel[prop] = +(!ngModel[prop])\r\n\r\n        $rootScope.formatBytes = (bytes) ->\r\n          if bytes < 1024\r\n            bytes + ' Bytes'\r\n          else if bytes < 1048576\r\n            (bytes / 1024).toFixed(1) + ' KB'\r\n          else if bytes < 1073741824\r\n            (bytes / 1048576).toFixed(1) + ' MB'\r\n          else\r\n            (bytes / 1073741824).toFixed(1) + ' GB'\r\n","angular\r\n    .module 'Egerep'\r\n    .controller 'Cv', ($scope, $timeout, Tutor, FileUploader, Cv, PhoneService) ->\r\n        bindArguments($scope, arguments)\r\n\r\n        $scope.error_text = 'ошибка: максимальная длина текста – 1000 символов'\r\n\r\n        $timeout ->\r\n            console.log 1\r\n            # $('.digits-only').inputmask(\"Regex\", {regex: \"[0-9]*\"})\r\n        , 1000\r\n\r\n        $scope.application =\r\n            agree_to_publish: 1\r\n\r\n        FileUploader.FileSelect.prototype.isEmptyAfterSelection = ->\r\n            true\r\n\r\n        $scope.uploader = new FileUploader\r\n            url: 'api/cv/uploadPhoto'\r\n            alias: 'photo'\r\n            autoUpload: true\r\n            method: 'post'\r\n            removeAfterUpload: true\r\n            onProgressItem: (i, progress) ->\r\n                $scope.percentage = progress\r\n            onCompleteItem: (i, response, status) ->\r\n                $scope.percentage = undefined\r\n                if status is 200\r\n                    $scope.application.filename = response.filename\r\n                    $scope.application.filesize = response.size\r\n                else\r\n                    $scope.upload_error = true\r\n                    $scope.application.filename = undefined\r\n\r\n        $scope.clearFile = ->\r\n            $scope.upload_error = false\r\n            $scope.application.filename = undefined\r\n\r\n        $scope.upload = (e) ->\r\n            e.preventDefault()\r\n            $scope.upload_error = false\r\n            $('#upload-button').trigger 'click'\r\n            false\r\n\r\n        $scope.sendApplication = ->\r\n            # if PhoneService.checkForm($('.phone-input'))\r\n            Cv.save $scope.application, ->\r\n                $scope.application.sent = true\r\n            , (response) ->\r\n                if response.status is 422\r\n                    $scope.errors = {}\r\n                    angular.forEach response.data, (errors, field) ->\r\n                        $scope.errors[field] = errors\r\n                        selector = \"[ng-model$='#{field}']\"\r\n                        $(\"input#{selector}, textarea#{selector}\").focus()\r\n                else\r\n                    $scope.application.error = true\r\n","angular\r\n    .module 'Egerep'\r\n    .controller 'Index', ($scope, $timeout, $http, Tutor) ->\r\n        bindArguments($scope, arguments)\r\n        $scope.selected_subject = '1'\r\n\r\n        $scope.refreshSelect = ->\r\n            $timeout ->\r\n                $('.custom-select-sort').trigger('render')\r\n\r\n        $scope.goSubject = ->\r\n            window.location = $scope.subject_routes[$scope.selected_subject]\r\n\r\n        # сотрудничает с 12 сентября 2000 года\r\n        $scope.dateToText = (date) ->\r\n            text_date = moment(date).format 'DD MMMM YYYY'\r\n            # вырезаем дату, оставляем месяц и год\r\n            # нужно именно так, чтобы осталось правильное склонение месяца\r\n            text_date.substr(3)\r\n\r\n        $scope.randomReview = ->\r\n            $http.get 'api/reviews/random'\r\n            .then (response) ->\r\n                $scope.random_review = response.data\r\n","angular.module('Egerep')\r\n    .controller 'LoginCtrl', ($scope, $timeout, Sms, Tutor) ->\r\n        bindArguments($scope, arguments)\r\n\r\n        login = ->\r\n            Tutor.login {}, (response) ->\r\n                $scope.tutor = response\r\n            , ->\r\n                $scope.tutor = null\r\n\r\n        login()\r\n\r\n        $scope.sendCode = ->\r\n            $scope.error_message = false\r\n            Sms.save\r\n                phone: $scope.phone\r\n            , ->\r\n                $scope.code_sent = true\r\n                $timeout -> $('#code-input').focus()\r\n            , ->\r\n                $scope.error_message = 'неверный номер телефона'\r\n\r\n        $scope.checkCode = ->\r\n            $scope.error_message = false\r\n            Sms.get\r\n                code: $scope.code\r\n            , ->\r\n                login()\r\n            , (response) ->\r\n                redirect('/') if response.status == 403\r\n                $scope.error_message = 'код введен неверно'\r\n","angular\r\n    .module 'Egerep'\r\n    .constant 'REVIEWS_PER_PAGE', 5\r\n    .constant 'REVIEWS_PER_PAGE_MOBILE', 10\r\n    .controller 'Tutors', ($scope, $timeout, Tutor, SubjectService, REVIEWS_PER_PAGE, REVIEWS_PER_PAGE_MOBILE, Request) ->\r\n        bindArguments($scope, arguments)\r\n\r\n        # сколько загрузок преподавателей было\r\n        search_count = 0\r\n\r\n        # личная страница преподавателя?\r\n        $scope.profilePage = ->\r\n            RegExp(/^\\/[\\d]+$/).test(window.location.pathname)\r\n\r\n        if not $scope.profilePage()\r\n        # страница поиска\r\n            $timeout ->\r\n                # если есть предустановленные предметы\r\n                if $scope.selected_subjects\r\n                    $scope.selected_subjects.split(',').forEach (subject_id) ->\r\n                        $scope.search.subjects[subject_id] = true\r\n\r\n                SubjectService.init($scope.search.subjects)\r\n\r\n                REVIEWS_PER_PAGE = REVIEWS_PER_PAGE_MOBILE if $scope.mobile\r\n\r\n                if $scope.mobile\r\n                    $scope.filter()\r\n                else\r\n                    $scope.chunked_subjects = chunk(toArray($scope.subjects), 4)\r\n                    metroAutocomplete($scope)\r\n                    $scope.filter() if not parseInt($scope.search.station_id)\r\n\r\n        # пары предметов\r\n        $scope.pairs = [\r\n            [1, 2]\r\n            [3, 4]\r\n            [6, 7]\r\n            [8, 9]\r\n        ]\r\n\r\n        # просмотренные преподаватели (чтобы не засчитывались просмотры несколько раз)\r\n        viewed_tutors = []\r\n\r\n        # сотрудничает с 12 сентября 2000 года\r\n        $scope.dateToText = (date) ->\r\n            text_date = moment(date).format 'DD MMMM YYYY'\r\n            # вырезаем дату, оставляем месяц и год\r\n            # нужно именно так, чтобы осталось правильное склонение месяца\r\n            text_date.substr(3)\r\n\r\n        $scope.requestSent = (tutor) ->\r\n            tutor.request_sent or $scope.sent_ids.indexOf(tutor.id) isnt -1\r\n\r\n        $scope.gmap = (tutor) ->\r\n            if tutor.map_shown is undefined then $timeout ->\r\n                map = new google.maps.Map document.getElementById(\"gmap-#{tutor.id}\"),\r\n                    center: MAP_CENTER\r\n                    scrollwheel: false,\r\n                    zoom: 8\r\n                    disableDefaultUI: true\r\n                    clickableLabels: false\r\n                    clickableIcons: false\r\n                    zoomControl: true\r\n                    zoomControlOptions:\r\n                        position: google.maps.ControlPosition.LEFT_BOTTOM\r\n                    scaleControl: true\r\n\r\n                bounds = new (google.maps.LatLngBounds)\r\n                tutor.markers.forEach (marker) ->\r\n                    bounds.extend(new google.maps.LatLng(marker.lat, marker.lng))\r\n                    new_marker = newMarker(new google.maps.LatLng(marker.lat, marker.lng), map)\r\n\r\n                # one marker bug fix\r\n                if bounds.getNorthEast().equals(bounds.getSouthWest())\r\n                    extendPoint1 = new google.maps.LatLng(bounds.getNorthEast().lat() + 0.02, bounds.getNorthEast().lng() + 0.02)\r\n                    extendPoint2 = new google.maps.LatLng(bounds.getNorthEast().lat() - 0.02, bounds.getNorthEast().lng() - 0.02)\r\n                    bounds.extend(extendPoint1)\r\n                    bounds.extend(extendPoint2)\r\n\r\n                map.fitBounds bounds\r\n                map.panToBounds bounds\r\n                map.setZoom 12\r\n\r\n                # bug fix – убираем квадратик в правом нижнем углу\r\n                google.maps.event.addListenerOnce map, 'idle', ->\r\n                    $('div:has(>a[href^=\"https://www.google.com/maps\"])').remove()\r\n\r\n            $scope.toggleShow(tutor, 'map_shown', 'gmap')\r\n\r\n        $scope.getMetros = (tutor) ->\r\n            _.chain(tutor.markers).pluck('metros').flatten().value()\r\n\r\n        $scope.reviews = (tutor) ->\r\n            if tutor.all_reviews is undefined\r\n                tutor.all_reviews = Tutor.reviews\r\n                    id: tutor.id\r\n                , (response) ->\r\n                    $scope.showMoreReviews(tutor)\r\n            $scope.toggleShow(tutor, 'show_reviews', 'reviews')\r\n\r\n        $scope.showMoreReviews = (tutor) ->\r\n            Tutor.iteraction {id: tutor.id, type: 'reviews_more'} if tutor.reviews_page\r\n            tutor.reviews_page = if not tutor.reviews_page then 1 else (tutor.reviews_page + 1)\r\n            from = (tutor.reviews_page - 1) * REVIEWS_PER_PAGE\r\n            to = from + REVIEWS_PER_PAGE\r\n            tutor.displayed_reviews = tutor.all_reviews.slice(0, to)\r\n            highlight('search-result-reviews-text')\r\n\r\n        $scope.reviewsLeft = (tutor) ->\r\n            return if not tutor.all_reviews or not tutor.displayed_reviews\r\n            reviews_left = tutor.all_reviews.length - tutor.displayed_reviews.length\r\n            if reviews_left > REVIEWS_PER_PAGE then REVIEWS_PER_PAGE else reviews_left\r\n\r\n        $scope.countView = (tutor_id) ->\r\n            if viewed_tutors.indexOf(tutor_id) is -1\r\n                # Tutor.iteraction {id: tutor_id, type: 'views'}\r\n                viewed_tutors.push tutor_id\r\n\r\n        # чтобы не редиректило в начале\r\n        filter_used = false\r\n        $scope.filter = (subject_id) ->\r\n            $scope.tutors = []\r\n            unselectSubjects(subject_id)\r\n            $scope.page = 1\r\n            search()\r\n            # деселект hidden_filter при смене параметров\r\n            delete $scope.search.hidden_filter if $scope.search.hidden_filter and search_count\r\n            filter_used = true\r\n\r\n        $scope.nextPage = ->\r\n            $scope.page++\r\n            search()\r\n\r\n        $scope.isLastPage = ->\r\n            return if not $scope.data\r\n            $scope.data.current_page >= $scope.data.last_page\r\n\r\n        unselectSubjects = (subject_id) ->\r\n            if subject_id\r\n                angular.forEach $scope.search.subjects, (enabled, id) ->\r\n                    pair = _.filter scope.pairs, (p) ->\r\n                        p.indexOf(parseInt(subject_id)) isnt -1\r\n                    pair.push([subject_id]) if not pair.length\r\n                    $scope.search.subjects[id] = false if pair[0].indexOf(parseInt(id)) is -1\r\n\r\n        search = ->\r\n            $scope.searching = true\r\n            Tutor.search\r\n                filter_used: filter_used\r\n                page: $scope.page\r\n                search: $scope.search\r\n            , (response) ->\r\n                search_count++\r\n                $scope.searching = false\r\n                if response.hasOwnProperty('url')\r\n                    redirect response.url\r\n                    # console.log response.url\r\n                else\r\n                    $scope.data = response\r\n                    $scope.tutors = $scope.tutors.concat(response.data)\r\n                    #comma separated fields\r\n                    angular.forEach $scope.tutors, (tutor) ->\r\n                        tutor.svg_map = _.filter tutor.svg_map.split(',') if 'string' == typeof tutor.svg_map\r\n                    highlight('search-result-text')\r\n                    if $scope.mobile then $timeout -> bindToggle()\r\n\r\n        # highlight hidden filter\r\n        highlight = (className)->\r\n            if $scope.search and $scope.search.hidden_filter then $timeout ->\r\n                $.each $scope.search.hidden_filter, (index, phrase) ->\r\n                    $(\".#{className}\").mark phrase,\r\n                        separateWordSearch: true\r\n                        accuracy:\r\n                            value: 'exactly'\r\n                            limiters: ['!', '@', '#', '&', '*', '(', ')', '-', '–', '—', '+', '=', '[', ']', '{', '}', '|', ':', ';', '\\'', '\\\"', '‘', '’', '“', '”', ',', '.', '<', '>', '/', '?']\r\n\r\n        $scope.clearMetro = ->\r\n            $('.search-metro-autocomplete').val('')\r\n            $('.search-filter-metro-wrap').removeClass('active')\r\n            $scope.search.station_id = 0\r\n            $scope.search.sort = '1'\r\n            $scope.filter()\r\n            $timeout ->\r\n                $('.custom-select-sort').trigger('render')\r\n\r\n        $scope.showSvg = (tutor) ->\r\n            if tutor.show_svg is undefined\r\n                map = new SVGMap\r\n                    iframeId: 'svg-iframe-'+tutor.id\r\n                    clicable: false\r\n                    places: $scope.svg\r\n                map.init()\r\n                map.deselectAll()\r\n                map.select(tutor.svg_map)\r\n                if $scope.mobile then $timeout ->\r\n                    svg = $(\"#svg-#{tutor.id}\")\r\n                    svg.scrollLeft(svg.width() / 4).scrollTop(svg.height() / 3)\r\n            $scope.toggleShow(tutor, 'show_svg', 'svg_map')\r\n\r\n        $scope.toggleShow = (tutor, prop, iteraction_type) ->\r\n            if tutor[prop]\r\n                tutor[prop] = false\r\n            else\r\n                tutor[prop] = true\r\n                Tutor.iteraction {id: tutor.id, type: iteraction_type}\r\n\r\n        #\r\n        # MOBILE\r\n        #\r\n        $scope.overlay = {}\r\n\r\n        $scope.changeFilter = (param, value = null) ->\r\n            $scope.search[param] = value if value isnt null\r\n            $scope.overlay[param] = false\r\n            $scope.filter()\r\n\r\n        $scope.requestDialog = (tutor) ->\r\n            $scope.sending_tutor = tutor\r\n            $scope.overlay.request = true\r\n\r\n        $scope.sendRequest = ->\r\n            $scope.sending_tutor.request = {} if $scope.sending_tutor.request is undefined\r\n            $scope.sending_tutor.request.tutor_id = $scope.sending_tutor.id\r\n            Request.save $scope.sending_tutor.request, ->\r\n                $scope.sending_tutor.request_sent = true\r\n            , (response) ->\r\n                if response.status is 422\r\n                    angular.forEach response.data, (errors, field) ->\r\n                        selector = \"[ng-model$='#{field}']\"\r\n                        $('.request-overlay').find(\"input#{selector}, textarea#{selector}\").focus().notify errors[0], notify_options\r\n                else\r\n                    $scope.sending_tutor.request_error = true\r\n\r\n        angular.element(document).ready ->\r\n            if $scope.mobile then $timeout -> bindToggle()","# angular\r\n#     .module 'Egerep'\r\n#     .controller 'VariablesIndex', ($scope, $attrs, IndexService, Variable) ->\r\n#         bindArguments($scope, arguments)\r\n#         angular.element(document).ready ->\r\n#             IndexService.init(Variable, $scope.current_page, $attrs)\r\n#     .controller 'VariablesForm', ($scope, $attrs, $timeout, FormService, Variable) ->\r\n#         bindArguments($scope, arguments)\r\n#         angular.element(document).ready ->\r\n#             FormService.init(Variable, $scope.id, $scope.model)\r\n","# angular.module('Egerep')\r\n#     .value 'Sort', [\r\n#         {id: 1, title: 'по цене – сначала дороже'}\r\n#         {id: 2, title: 'по цене – сначала дешевле'}\r\n#         {id: 3, title: 'по популярности'}\r\n#         {id: 4, title: 'по близости к метро'}\r\n#     ]\r\n","# angular.module('Egerep').directive 'comments', ->\r\n#     restrict: 'E'\r\n#     templateUrl: 'directives/comments'\r\n#     scope:\r\n#         user: '='\r\n#         entityId: '='\r\n#         trackLoading: '='\r\n#         entityType: '@'\r\n#     controller: ($rootScope, $scope, $timeout, Comment) ->\r\n#         $scope.show_max = 4                 # сколько комментов показывать в свернутом режиме\r\n#         $scope.show_all_comments = false    # показать все комментарии?\r\n#         $scope.is_dragging = false          # комментарий перетаскивается\r\n#\r\n#         bindDraggable = (comment_id) ->\r\n#             $(\"#comment-#{comment_id}\").draggable\r\n#                 revert: 'invalid'\r\n#                 activeClass: 'drag-active'\r\n#                 start: (e, ui) ->\r\n#                     $scope.is_dragging = true\r\n#                     $scope.$apply()\r\n#                 stop: (e, ui) ->\r\n#                     $scope.is_dragging = false\r\n#                     $scope.$apply()\r\n#\r\n#         $timeout ->\r\n#             $scope.comments.forEach (comment) ->\r\n#                 bindDraggable(comment.id)\r\n#             $(\"#comment-delete-#{$scope.entityType}-#{$scope.entityId}\").droppable\r\n#                 tolerance: 'pointer'\r\n#                 hoverClass: 'hovered'\r\n#                 drop: (e, ui) ->\r\n#                     $scope.remove($(ui.draggable).data('comment-id'))\r\n#         , 2000\r\n#\r\n#         $scope.showAllComments = ->\r\n#             $scope.show_all_comments = true\r\n#             $timeout ->\r\n#                 $scope.comments.forEach (comment) ->\r\n#                     bindDraggable(comment.id)\r\n#\r\n#         $scope.getComments = ->\r\n#             if ($scope.show_all_comments or $scope.comments.length <= $scope.show_max) then $scope.comments else _.last($scope.comments, $scope.show_max - 1)\r\n#\r\n#         # перезагружаем комменты, если меняется entity_id\r\n#         $scope.$watch 'entityId', (newVal, oldVal) ->\r\n#             $scope.comments = Comment.query\r\n#                 entity_type: $scope.entityType\r\n#                 entity_id: newVal\r\n#             , ->\r\n#                 $rootScope.loaded_comments++ if $scope.trackLoading\r\n#\r\n#         $scope.formatDateTime = (date) ->\r\n#             moment(date).format \"DD.MM.YY в HH:mm\"\r\n#\r\n#         $scope.startCommenting = (event) ->\r\n#             $scope.start_commenting = true\r\n#             $timeout ->\r\n#                 $(event.target).parent().find('input').focus()\r\n#\r\n#         $scope.endCommenting = ->\r\n#             $scope.comment = ''\r\n#             $scope.start_commenting = false\r\n#\r\n#         $scope.remove = (comment_id) ->\r\n#             _.find($scope.comments, {id: comment_id}).$remove()\r\n#             $scope.comments = _.without($scope.comments, _.findWhere($scope.comments, {id: comment_id}))\r\n#\r\n#         $scope.edit = (comment, event) ->\r\n#             old_text    = comment.comment\r\n#             element     = $(event.target)\r\n#\r\n#             element.unbind('keydown').unbind('blur')\r\n#\r\n#             element.attr('contenteditable', 'true').focus()\r\n#                 .on 'keydown', (e) ->\r\n#                     console.log old_text\r\n#                     if e.keyCode is 13\r\n#                         $(@).removeAttr('contenteditable').blur()\r\n#                         comment.comment = $(@).text()\r\n#                         comment.$update()\r\n#                     if e.keyCode is 27\r\n#                         $(@).blur()\r\n#\r\n#                 .on 'blur', (e) ->\r\n#                     if element.attr 'contenteditable'\r\n#                         console.log old_text\r\n#                         element.removeAttr('contenteditable').html old_text\r\n#             return\r\n#             # setEndOfContenteditable(event.target)\r\n#\r\n#         $scope.submitComment = (event) ->\r\n#             if event.keyCode is 13\r\n#                 new_comment = new Comment\r\n#                     comment: $scope.comment\r\n#                     user_id: $scope.user.id\r\n#                     entity_id: $scope.entityId\r\n#                     entity_type: $scope.entityType\r\n#                 new_comment.$save()\r\n#                     .then (response)->\r\n#                         console.log response\r\n#                         new_comment.user = $scope.user\r\n#                         new_comment.id = response.id\r\n#                         $scope.comments.push new_comment\r\n#                         $timeout ->\r\n#                             bindDraggable(new_comment.id)\r\n#                 $scope.endCommenting()\r\n#\r\n#             if event.keyCode is 27\r\n#                 $(event.target).blur()\r\n","# angular.module('Egerep').directive 'email', ->\r\n#     restrict: 'E'\r\n#     templateUrl: 'directives/email'\r\n#     scope:\r\n#         entity: '='\r\n#     controller: ($scope) ->\r\n#         $scope.send = ->\r\n#             $('#email-modal').modal 'show'\r\n#     # controller: ($scope, $timeout, Email) ->\r\n#     #     # массовая отправка?\r\n#     #     $scope.mass = false\r\n#     #\r\n#     #     # подсчитать СМС\r\n#     #     $scope.smsCount = ->\r\n#     #         SmsCounter.count($scope.message || '').messages\r\n#     #\r\n#     #     # отправить\r\n#     #     $scope.send = ->\r\n#     #         if $scope.message\r\n#     #             sms = new Sms\r\n#     #                 message: $scope.message\r\n#     #                 to: $scope.number\r\n#     #                 mass: $scope.mass\r\n#     #             sms.$save()\r\n#     #\r\n#     #     # подгружаем историю, если номер телефона меняется\r\n#     #     $scope.$watch 'number', (newVal, oldVal) ->\r\n#     #         console.log $scope.$parent.formatDateTime($scope.created_at)\r\n#     #         $scope.history = Sms.query({number: newVal}) if newVal\r\n","angular.module('Egerep').directive 'errors', ->\r\n    restrict: 'E'\r\n    templateUrl: 'directives/errors'\r\n    scope:\r\n        model: '@'\r\n    controller: ($scope, $element, $attrs) ->\r\n        $scope.only_first = $attrs.hasOwnProperty('onlyFirst')\r\n\r\n        $scope.getErrors = ->\r\n            return if $scope.$parent.errors is undefined\r\n            errors = $scope.$parent.errors[$scope.model]\r\n            if $scope.only_first then [errors[0]] else errors\r\n","angular.module('Egerep').directive 'icheck', ($timeout, $parse) ->\r\n  {\r\n    require: 'ngModel'\r\n    link: ($scope, element, $attrs, ngModel) ->\r\n      $timeout ->\r\n        value = undefined\r\n        value = $attrs['value']\r\n        $scope.$watch $attrs['ngModel'], (newValue) ->\r\n          $(element).iCheck 'update'\r\n          return\r\n        $(element).iCheck(\r\n          checkboxClass: 'custom-checkbox',\r\n          radioClass: 'custom-radio',\r\n          checkedClass: 'checked',\r\n          cursor: true).on 'ifChanged', (event) ->\r\n          if $(element).attr('type') == 'checkbox' and $attrs['ngModel']\r\n            $scope.$apply ->\r\n              ngModel.$setViewValue event.target.checked\r\n          if $(element).attr('type') == 'radio' and $attrs['ngModel']\r\n            return $scope.$apply(->\r\n              ngModel.$setViewValue value\r\n            )\r\n          return\r\n\r\n  }\r\n","# angular.module('Egerep').directive 'inputComment', ->\r\n#     restrict: 'E'\r\n#     templateUrl: 'directives/input-comment'\r\n#     scope:\r\n#         entity: '='\r\n#         commentField: '@'\r\n#     controller: ($scope, $timeout) ->\r\n#         $scope.is_being_commented = false\r\n#\r\n#         $scope.blurComment = ->\r\n#             $scope.is_being_commented = false\r\n#\r\n#         $scope.focusComment = ->\r\n#             $scope.is_being_commented = true\r\n#\r\n#         $scope.startComment = (event) ->\r\n#             $scope.is_being_commented = true\r\n#             $timeout ->\r\n#                 $(event.target).parent().children('input').focus()\r\n#\r\n#         $scope.endComment =  (event) ->\r\n#             if event.keyCode is 13\r\n#                 $(event.target).blur()\r\n#                 return\r\n","# angular.module 'Egecms'\r\n#     .directive 'ngMulti', ->\r\n#         restrict: 'E'\r\n#         replace: true\r\n#         scope:\r\n#             object: '='\r\n#             model: '='\r\n#             label: '@'\r\n#             noneText: '@'\r\n#         templateUrl: 'directives/ngmulti'\r\n#         controller: ($scope, $element, $attrs, $timeout) ->\r\n#             $timeout ->\r\n#                 $($element).selectpicker\r\n#                     noneSelectedText: $scope.noneText\r\n#             , 100\r\n","# angular.module('Egerep').directive 'pencilInput', ->\r\n#     restrict: 'E'\r\n#     replace: true\r\n#     templateUrl: 'directives/pencil-input'\r\n#     scope:\r\n#         model: '='\r\n#     controller: ($scope, $timeout, $element, $controller) ->\r\n#         $scope.is_being_commented = false\r\n#\r\n#         $scope.blurComment = ->\r\n#             $scope.is_being_commented = false\r\n#\r\n#         $scope.focusComment = ->\r\n#             $scope.is_being_commented = true\r\n#\r\n#         $scope.startComment = (event) ->\r\n#             $scope.is_being_commented = true\r\n#             $timeout ->\r\n#                 $(event.target).parent().children('div').focus()\r\n#\r\n#         $scope.watchEnter = (event) ->\r\n#             if event.keyCode in [13, 27]\r\n#                 # @todo: надо изменить\r\n#                 if event.keyCode is 13\r\n#                     $scope.model = $(event.target).parent().children('div').text()\r\n#\r\n#                 $(event.target).parent().children('div').text($scope.model)\r\n#                 event.preventDefault()\r\n#                 $(event.target).blur()\r\n#             return\r\n","angular.module('Egerep')\r\n    .directive 'ngPhone', ->\r\n        restrict: 'A'\r\n        link: ($scope, element) ->\r\n            $(element).mask(\"+7 (999) 999-99-99\", { autoclear: false })\r\n","# angular.module('Egerep').directive 'phones', ->\r\n#     restrict: 'E'\r\n#     templateUrl: 'directives/phones'\r\n#     scope:\r\n#         entity: '='\r\n#     controller: ($scope, $timeout, $rootScope, PhoneService, UserService) ->\r\n#         $scope.PhoneService = PhoneService\r\n#         $scope.UserService  = UserService\r\n#\r\n#         console.log $scope.entityType\r\n#\r\n#         # level depth\r\n#         $rootScope.dataLoaded.promise.then (data) ->\r\n#             $scope.level = if $scope.entity.phones and $scope.entity.phones.length then $scope.entity.phones.length else 1\r\n#\r\n#         $scope.nextLevel = ->\r\n#             $scope.level++\r\n#\r\n#         $scope.phoneMaskControl = (event) ->\r\n#             el = $(event.target)\r\n#             # grabs string phone_2 from object model.phone2\r\n#             # so it can be accessible by key\r\n#             phone_id = el.attr('ng-model').split('.')[1]\r\n#             $scope.entity[phone_id] = $(event.target).val()\r\n#\r\n#         $scope.isFull = (number) ->\r\n#             return false if number is undefined or number is \"\"\r\n#             !number.match(/_/)\r\n#\r\n#         # отправить смс\r\n#         $scope.sms = (number) ->\r\n#             $('#sms-modal').modal 'show'\r\n#             $rootScope.sms_number = number\r\n#\r\n#         # информация по api\r\n#         $scope.info = (number) ->\r\n#             $scope.api_number = number\r\n#             $scope.mango_info = null\r\n#             $('#api-phone-info').modal 'show'\r\n#             PhoneService.info(number).then (response) ->\r\n#                 console.log response.data\r\n#                 $scope.mango_info = response.data\r\n#\r\n#         $scope.formatDateTime = (date) ->\r\n#             moment(date).format \"DD.MM.YY в HH:mm\"\r\n#\r\n#         $scope.time = (seconds) ->\r\n#             moment({}).seconds(seconds).format(\"mm:ss\")\r\n#\r\n#         $scope.getNumberTitle = (number) ->\r\n#             console.log number, $scope.api_number\r\n#             return 'текущий номер' if number is PhoneService.clean($scope.api_number)\r\n#             number\r\n#\r\n#         recodringLink = (recording_id) ->\r\n#             api_key   = 'goea67jyo7i63nf4xdtjn59npnfcee5l'\r\n#             api_salt  = 't9mp7vdltmhn0nhnq0x4vwha9ncdr8pa'\r\n#             timestamp = moment().add(5, 'minute').unix()\r\n#\r\n#             sha256 = new jsSHA('SHA-256', 'TEXT')\r\n#             sha256.update(api_key + timestamp + recording_id + api_salt)\r\n#             sign = sha256.getHash('HEX')\r\n#\r\n#             return \"https://app.mango-office.ru/vpbx/queries/recording/link/#{recording_id}/play/#{api_key}/#{timestamp}/#{sign}\"\r\n#\r\n#         $scope.play = (recording_id) ->\r\n#             $scope.audio.pause() if $scope.audio\r\n#             $scope.audio = new Audio recodringLink(recording_id)\r\n#             $scope.audio.play()\r\n#             $scope.is_playing = recording_id\r\n#\r\n#         $scope.isPlaying = (recording_id) ->\r\n#             $scope.is_playing is recording_id\r\n#\r\n#         $scope.stop = (recording_id) ->\r\n#             $scope.is_playing = null\r\n#             $scope.audio.pause()\r\n#\r\n#         $scope.disconnectReason = (data) ->\r\n#             # return 'НБТ' if data.to_extension is '' and data.disconnect_reason is '1100'\r\n#             data.disconnect_reason\r\n","angular.module 'Egerep'\r\n    .directive 'plural', ->\r\n        restrict: 'E'\r\n        scope:\r\n            count: '='      # кол-во\r\n            type: '@'       # тип plural age | student | ...\r\n            noneText: '@'   # текст, если кол-во равно нулю\r\n        templateUrl: '/directives/plural'\r\n        controller: ($scope, $element, $attrs, $timeout) ->\r\n            $scope.textOnly = $attrs.hasOwnProperty('textOnly')\r\n            $scope.hideZero = $attrs.hasOwnProperty('hideZero')\r\n\r\n            $scope.when =\r\n                'age': ['год', 'года', 'лет']\r\n                'student': ['ученик', 'ученика', 'учеников']\r\n                'minute': ['минуту', 'минуты', 'минут']\r\n                'hour': ['час', 'часа', 'часов']\r\n                'day': ['день', 'дня', 'дней']\r\n                'meeting': ['встреча', 'встречи', 'встреч']\r\n                'score': ['балл', 'балла', 'баллов']\r\n                'rubbles': ['рубль', 'рубля', 'рублей']\r\n                'lesson': ['занятие', 'занятия', 'занятий']\r\n                'client': ['клиент', 'клиента', 'клиентов']\r\n                'mark': ['оценки', 'оценок', 'оценок']\r\n                'review': ['отзыв', 'отзыва', 'отзывов']\r\n                'request': ['заявка', 'заявки', 'заявок']\r\n                'station': ['станцию', 'станции', 'станций']\r\n                'tutor': ['репетитор', 'репетитора', 'репетиторов']\r\n                'profile': ['анкета', 'анкеты', 'анкет']\r\n                'schooler': ['школьник нашел', 'школьника нашли', 'школьников нашли']\r\n                'taught': ['Обучен', 'Обучено', 'Обучено']\r\n","# angular.module 'Egerep'\r\n#     .directive 'plus', ->\r\n#         restrict: 'E'\r\n#         scope:\r\n#             previous: '='\r\n#             count: '='\r\n#         templateUrl: 'directives/plus'\r\n","angular.module('Egerep')\r\n    .directive 'requestForm', ->\r\n        replace: true\r\n        scope:\r\n            tutor: '='\r\n            sentIds: '='\r\n        templateUrl: 'directives/request-form'\r\n        controller: ($scope, $element, $timeout, Request, PhoneService) ->\r\n            # отправить заявку\r\n            $scope.request = ->\r\n                $scope.tutor.request = {} if $scope.tutor.request is undefined\r\n                $scope.tutor.request.tutor_id = $scope.tutor.id\r\n                Request.save $scope.tutor.request, ->\r\n                    $scope.tutor.request_sent = true\r\n                    trackDataLayer()\r\n                , (response) ->\r\n                    if response.status is 422\r\n                        angular.forEach response.data, (errors, field) ->\r\n                            selector = \"[ng-model$='#{field}']\"\r\n                            $($element).find(\"input#{selector}, textarea#{selector}\").focus().notify errors[0], notify_options\r\n                    else\r\n                        $scope.tutor.request_error = true\r\n\r\n            trackDataLayer = ->\r\n                window.dataLayer = window.dataLayer || []\r\n                window.dataLayer.push\r\n                    event: 'purchase'\r\n                    ecommerce:\r\n                        currencyCode: 'RUR'\r\n                        purchase:\r\n                            actionField:\r\n                                id: $scope.tutor.id\r\n                                affilaction: 'serp' # @todo: profile|request\r\n                                revenue: $scope.tutor.public_price\r\n                            products: [\r\n                                id: $scope.tutor.id\r\n                                price: $scope.tutor.public_price\r\n                                brand: $scope.tutor.subjects\r\n                                category: $scope.tutor.markers\r\n                                quantity: 1\r\n                            ]\r\n","# angular.module 'Egecms'\r\n#     .directive 'ngSelect', ->\r\n#         restrict: 'E'\r\n#         replace: true\r\n#         scope:\r\n#             object: '='\r\n#             model: '='\r\n#             noneText: '@'\r\n#             label: '@'\r\n#         templateUrl: 'directives/ngselect'\r\n#         controller: ($scope, $element, $attrs, $timeout) ->\r\n#             # выбираем первое значение по умолчанию, если нет noneText\r\n#             if not $scope.noneText\r\n#                 $scope.model = _.first Object.keys($scope.object)\r\n#\r\n#             $timeout ->\r\n#                 $($element).selectpicker()\r\n#             , 100\r\n","# angular.module('Egerep').directive 'sms', ->\r\n#     restrict: 'E'\r\n#     templateUrl: 'directives/sms'\r\n#     scope:\r\n#         number: '='\r\n#     controller: ($scope, $timeout, Sms) ->\r\n#         # массовая отправка?\r\n#         $scope.mass = false\r\n#\r\n#         # подсчитать СМС\r\n#         $scope.smsCount = ->\r\n#             SmsCounter.count($scope.message || '').messages\r\n#\r\n#         # отправить\r\n#         $scope.send = ->\r\n#             if $scope.message\r\n#                 sms = new Sms\r\n#                     message: $scope.message\r\n#                     to: $scope.number\r\n#                     mass: $scope.mass\r\n#                 sms.$save()\r\n#                     .then (data) ->\r\n#                         $scope.history.push(data)\r\n#                         scrollDown()\r\n#\r\n#         # подгружаем историю, если номер телефона меняется\r\n#         $scope.$watch 'number', (newVal, oldVal) ->\r\n#             console.log $scope.$parent.formatDateTime($scope.created_at)\r\n#             $scope.history = Sms.query({number: newVal}) if newVal\r\n#             scrollDown()\r\n#\r\n#         scrollDown = ->\r\n#             $timeout ->\r\n#                 $(\"#sms-history\").animate({ scrollTop: $(window).height() }, \"fast\");\r\n","angular.module 'Egerep'\r\n    .directive 'subjectList', ->\r\n        restrict: 'E'\r\n        scope:\r\n            subjects: '='\r\n            subjectIds: '='\r\n            case: '@'\r\n        templateUrl: '/directives/subject-list'\r\n        controller: ($scope, $element, $attrs, $rootScope) ->\r\n            $scope.byId = $attrs.byId isnt undefined\r\n            $scope.case = 'dative' if $scope.case is undefined\r\n            $scope.findById = $rootScope.findById\r\n","angular.module 'Egerep'\r\n    .directive 'tutorName', ->\r\n        restrict: 'E'\r\n        scope:\r\n            tutor: '='\r\n        templateUrl: '/directives/tutor-name'\r\n","# angular.module 'Egerep'\r\n#     .directive 'tutorPhoto', ->\r\n#         restrict: 'E'\r\n#         replace: true\r\n#         scope:\r\n#             tutor: '='\r\n#             version: '='\r\n#         templateUrl: 'directives/tutor-photo'\r\n","# #\r\n# # Dependencies: UserService should be available in parent scope!\r\n# #\r\n#\r\n# angular.module 'Egerep'\r\n#     .directive 'userSwitch', ->\r\n#         restrict: 'E'\r\n#         scope:\r\n#             entity: '='\r\n#             resource: '='\r\n#             userId: '@'\r\n#         templateUrl: 'directives/user-switch'\r\n#         controller: ($scope) ->\r\n#             $scope.UserService = $scope.$parent.UserService\r\n","# angular.module 'Egerep'\r\n#     .directive 'user', ->\r\n#         restrict: 'E'\r\n#         scope:\r\n#             model: '='      # кол-во\r\n#         templateUrl: 'directives/user'\r\n","angular.module('Egerep')\r\n    .factory 'Tutor', ($resource) ->\r\n        $resource apiPath('tutors'), {id: '@id', type: '@type'},\r\n            search:\r\n                method: 'POST'\r\n                url: apiPath('tutors', 'search')\r\n            reviews:\r\n                method: 'GET'\r\n                isArray: true\r\n                url: apiPath('tutors', 'reviews')\r\n            iteraction:\r\n                method: 'GET'\r\n                url: \"/api/tutors/iteraction/:id/:type\"\r\n            login:\r\n                method: 'GET'\r\n                url: apiPath('tutors', 'login')\r\n\r\n    .factory 'Request', ($resource) ->\r\n        $resource apiPath('requests'), {id: '@id'}, updatable()\r\n\r\n    .factory 'Sms', ($resource) ->\r\n        $resource apiPath('sms'), {id: '@id'}, updatable()\r\n\r\n    .factory 'Cv', ($resource) ->\r\n        $resource apiPath('cv'), {id: '@id'}\r\n\r\napiPath = (entity, additional = '') ->\r\n    \"/api/#{entity}/\" + (if additional then additional + '/' else '') + \":id\"\r\n\r\n\r\nupdatable = ->\r\n    update:\r\n        method: 'PUT'\r\ncountable = ->\r\n    count:\r\n        method: 'GET'\r\n","angular.module 'Egerep'\r\n    .service 'PhoneService', ->\r\n        # проверить перед отправкой форму\r\n        this.checkForm = (element)->\r\n            phone_element = $(element).find('.phone-field')\r\n\r\n            # номер телефона не заполнен полностью\r\n            if not isFull(phone_element.val())\r\n                phone_element.focus().notify 'номер телефона не заполнен полностью', notify_options\r\n                return false\r\n\r\n            # номер должен начинаться с 9 или 4\r\n            phone_number = phone_element.val().match(/\\d/g).join('')\r\n            if phone_number[1] != '4' and phone_number[1] != '9'\r\n                phone_element.focus().notify 'номер должен начинаться с 9 или 4', notify_options\r\n                return false\r\n            true\r\n\r\n        # номер телефона полный\r\n        isFull = (number) ->\r\n            return false if number is undefined or number is \"\"\r\n            !number.match(/_/)\r\n\r\n        this\r\n","angular.module 'Egerep'\r\n    .service 'SubjectService', ->\r\n        # пары предметов\r\n        this.pairs = [\r\n            [1, 2]\r\n            [3, 4]\r\n            [6, 7]\r\n            [8, 9]\r\n        ]\r\n\r\n        this.init = (subjects) ->\r\n            this.subjects = subjects\r\n\r\n        this.pairsControl = (subject_id) ->\r\n            if subject_id\r\n                angular.forEach this.subjects, (enabled, id) =>\r\n                    pair = _.filter this.pairs, (p) ->\r\n                        p.indexOf(parseInt(subject_id)) isnt -1\r\n                    pair.push([subject_id]) if not pair.length\r\n                    this.subjects[id] = false if pair[0].indexOf(parseInt(id)) is -1\r\n\r\n        this.selected = (subject_id) ->\r\n            this.subjects isnt undefined and this.subjects[subject_id] isnt undefined and this.subjects[subject_id]\r\n\r\n        this.select = (subject_id) ->\r\n            this.subjects[subject_id] = if this.subjects[subject_id] then not this.subjects[subject_id] else true\r\n            this.pairsControl(subject_id)\r\n\r\n        this.getSelected = ->\r\n            ids = []\r\n            angular.forEach this.subjects, (enabled, id) ->\r\n                ids.push(id) if enabled\r\n            ids\r\n\r\n        this\r\n"]}