{"version":3,"sources":["app.coffee","controllers/_template.coffee","controllers/cv.coffee","controllers/empty.coffee","controllers/index.coffee","controllers/login.coffee","controllers/tutors.coffee","factory/factory.coffee","resources/resources.coffee","directives/age-input.coffee","directives/comments.coffee","directives/email.coffee","directives/errors.coffee","directives/hide-looped-link.coffee","directives/icheck.coffee","directives/in-view.coffee","directives/input-comment.coffee","directives/multi-select.coffee","directives/pencil-input.coffee","directives/phone-field.coffee","directives/phones.coffee","directives/plural.coffee","directives/plus.coffee","directives/request-form.coffee","directives/select.coffee","directives/subject-list.coffee","directives/tutor-name.coffee","directives/tutor-photo.coffee","directives/user-switch.coffee","directives/user.coffee","directives/widget-loadable.coffee","service/phone.coffee","service/stream.coffee","service/subject.coffee"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["angular.module(\"Egerep\", ['ngResource', 'angularFileUpload', 'angular-toArrayFilter', 'svgmap', 'ngSanitize', 'angucomplete-alt'])\n    .config [\n        '$compileProvider'\n        ($compileProvider) ->\n            $compileProvider.aHrefSanitizationWhitelist /^\\s*(https?|ftp|mailto|chrome-extension|sip):/\n\t]\n    .filter 'cut', ->\n      (value, wordwise, max, nothing = '', tail) ->\n        if !value\n          return nothing\n        max = parseInt(max, 10)\n        if !max\n          return value\n        if value.length <= max\n          return value\n        value = value.substr(0, max)\n        if wordwise\n          lastspace = value.lastIndexOf(' ')\n          if lastspace != -1\n            #Also remove . and , so its gives a cleaner result.\n            if value.charAt(lastspace - 1) == '.' or value.charAt(lastspace - 1) == ','\n              lastspace = lastspace - 1\n            value = value.substr(0, lastspace)\n        value + (tail or '…')\n    .filter 'hideZero', ->\n        (item) ->\n            if item > 0 then item else null\n    .run ($rootScope, $q) ->\n        # отвечает за загрузку данных\n        $rootScope.dataLoaded = $q.defer()\n        # конец анимации front-end загрузки и rebind маск\n        $rootScope.frontendStop = (rebind_masks = true) ->\n            $rootScope.frontend_loading = false\n            $rootScope.dataLoaded.resolve(true)\n            rebindMasks() if rebind_masks\n\n        $rootScope.withTailingDot = (text) ->\n            text = text.trim()\n            char = text[text.length - 1]\n            text = text + '.' if ['!', '.'].indexOf(char) is -1\n            text\n\n        $rootScope.range = (min, max, step) ->\n          step = step or 1\n          input = []\n          i = min\n          while i <= max\n            input.push i\n            i += step\n          input\n\n        $rootScope.yearsPassed = (year) -> moment().format(\"YYYY\") - year\n\n          # skip_values – какие значения в enum пропускать\n          # allowed_user_ids – пользователи, которым разрешено выбирать значения\n          # recursion – функция была запущена рекурсивно (внизу)\n        $rootScope.toggleEnum = (ngModel, status, ngEnum, skip_values = [], allowed_user_ids = [], recursion = false) ->\n            # если установлено значение, которое пропускается для обычных пользователей,\n            # то запрещать его смену\n            return if not recursion and parseInt(ngModel[status]) in skip_values and $rootScope.$$childHead.user.id not in allowed_user_ids\n\n            statuses = Object.keys(ngEnum)\n            status_id = statuses.indexOf ngModel[status].toString()\n            status_id++\n            status_id = 0 if status_id > (statuses.length - 1)\n            ngModel[status] = statuses[status_id]\n            # if in skip_values\n            $rootScope.toggleEnum(ngModel, status, ngEnum, skip_values, allowed_user_ids, true) if status_id in skip_values and $rootScope.$$childHead.user.id not in allowed_user_ids\n\n        # обновить + ждать ответа от сервера\n        $rootScope.toggleEnumServer = (ngModel, status, ngEnum, Resource) ->\n            statuses = Object.keys(ngEnum)\n            status_id = statuses.indexOf ngModel[status].toString()\n            status_id++\n            status_id = 0 if status_id > (statuses.length - 1)\n\n            update_data = {id: ngModel.id}\n            update_data[status] = status_id\n\n            Resource.update update_data, ->\n                ngModel[status] = statuses[status_id]\n\n        $rootScope.formatDateTime = (date) ->\n            moment(date).format \"DD.MM.YY в HH:mm\"\n\n        $rootScope.formatDate = (date, full_year = false) ->\n            return '' if not date\n            moment(date).format \"DD.MM.YY\" + (if full_year then \"YY\" else \"\")\n\n        $rootScope.formatDateFull = (date) ->\n            moment(date).format \"D MMMM YYYY\"\n\n        $rootScope.dialog = (id) ->\n            $(\"##{id}\").modal 'show'\n            return\n\n        $rootScope.closeDialog = (id) ->\n            $(\"##{id}\").modal 'hide'\n            return\n\n        $rootScope.onEnter = (event, fun, prevent_default = true) ->\n            event.preventDefault() if prevent_default\n            fun() if event.keyCode is 13\n\n        $rootScope.ajaxStart = ->\n            ajaxStart()\n            $rootScope.saving = true\n\n        $rootScope.ajaxEnd = ->\n            ajaxEnd()\n            $rootScope.saving = false\n\n        $rootScope.findById = (object, id) ->\n            _.findWhere(object, {id: parseInt(id)})\n\n        # prop2 – второй уровень вложенности\n        $rootScope.total = (array, prop, prop2 = false) ->\n            sum = 0\n            $.each array, (index, value) ->\n                v = value[prop]\n                v = v[prop2] if prop2\n                sum += v\n            sum\n\n        $rootScope.deny = (ngModel, prop) ->\n            ngModel[prop] = +(!ngModel[prop])\n\n        $rootScope.closestMetro = (markers) ->\n            closest_metro = markers[0].metros[0]\n            markers.forEach (marker) ->\n                marker.metros.forEach (metro) ->\n                    closest_metro = metro if metro.meters < closest_metro.meters\n            closest_metro.station.title\n\n        $rootScope.closestMetros = (markers) ->\n            closest_metros = []\n            if markers\n                markers.forEach (marker, index) ->\n                    closest_metros[index] = marker.metros[0]\n                    closest_metros[index].comment = marker.comment\n                    marker.metros.forEach (metro) ->\n                        if metro.meters < closest_metros[index].meters\n                            closest_metros[index] = metro\n                            closest_metros[index] = marker.comment\n            closest_metros\n\n        $rootScope.photoUrl = (tutor) ->\n            if tutor and tutor.photo_exists\n                \"https://lk.ege-repetitor.ru/img/tutors/#{tutor.id}.#{tutor.photo_extension}\"\n            else\n                \"https://lk.ege-repetitor.ru/img/tutors/no-profile-img.gif\"\n\n        $rootScope.objectLength = (obj) -> Object.keys(obj).length\n\n        $rootScope.formatBytes = (bytes) ->\n          if bytes < 1024\n            bytes + ' Bytes'\n          else if bytes < 1048576\n            (bytes / 1024).toFixed(1) + ' KB'\n          else if bytes < 1073741824\n            (bytes / 1048576).toFixed(1) + ' MB'\n          else\n            (bytes / 1073741824).toFixed(1) + ' GB'\n","# angular\n#     .module 'Egerep'\n#     .controller 'VariablesIndex', ($scope, $attrs, IndexService, Variable) ->\n#         bindArguments($scope, arguments)\n#         angular.element(document).ready ->\n#             IndexService.init(Variable, $scope.current_page, $attrs)\n#     .controller 'VariablesForm', ($scope, $attrs, $timeout, FormService, Variable) ->\n#         bindArguments($scope, arguments)\n#         angular.element(document).ready ->\n#             FormService.init(Variable, $scope.id, $scope.model)\n","angular\n    .module 'Egerep'\n    .controller 'Cv', ($scope, $timeout, Tutor, FileUploader, Cv, PhoneService, StreamService) ->\n        bindArguments($scope, arguments)\n\n        $scope.error_text = 'ошибка: максимальная длина текста – 1000 символов'\n\n        $timeout ->\n            console.log 1\n            # $('.digits-only').inputmask(\"Regex\", {regex: \"[0-9]*\"})\n        , 1000\n\n        $scope.application =\n            agree_to_publish: 1\n\n        FileUploader.FileSelect.prototype.isEmptyAfterSelection = ->\n            true\n\n        $scope.uploader = new FileUploader\n            url: 'api/cv/uploadPhoto'\n            alias: 'photo'\n            autoUpload: true\n            method: 'post'\n            removeAfterUpload: true\n            onProgressItem: (i, progress) ->\n                $scope.percentage = progress\n            onCompleteItem: (i, response, status) ->\n                $scope.percentage = undefined\n                if status is 200\n                    $scope.application.filename = response.filename\n                    $scope.application.filesize = response.size\n                else\n                    $scope.upload_error = true\n                    $scope.application.filename = undefined\n\n        $scope.clearFile = ->\n            $scope.upload_error = false\n            $scope.application.filename = undefined\n\n        $scope.upload = (e) ->\n            e.preventDefault()\n            $scope.upload_error = false\n            $('#upload-button').trigger 'click'\n            false\n\n        $scope.sendApplication = ->\n            # if PhoneService.checkForm($('.phone-input'))\n            Cv.save $scope.application, ->\n                $scope.application.sent = true\n            , (response) ->\n                if response.status is 422\n                    $scope.errors = {}\n                    angular.forEach response.data, (errors, field) ->\n                        $scope.errors[field] = errors\n                        selector = \"[ng-model$='#{field}']\"\n                        $(\"input#{selector}, textarea#{selector}\").focus()\n                        $('html,body').animate({scrollTop: $(\"input#{selector}, textarea#{selector}\").first().offset().top}, 0)\n                else\n                    $scope.application.error = true\n","angular\n    .module 'Egerep'\n    .controller 'Empty', ($scope, StreamService) ->\n        bindArguments($scope, arguments)\n","angular\n    .module 'Egerep'\n    .controller 'Index', ($scope, $timeout, $http, Tutor, StreamService) ->\n        $timeout ->\n            StreamService.run('landing', 'main')\n            $scope.has_more_reviews = true\n            $scope.reviews_page = 0\n            $scope.reviews = []\n            searchReviews()\n\n        $scope.nextReviewsPage = ->\n            $scope.reviews_page++\n            # StreamService.run('load_more_tutors', null, {page: $scope.page})\n            searchReviews()\n\n        # $scope.$watch 'page', (newVal, oldVal) -> $.cookie('page', $scope.page) if newVal isnt undefined\n\n        searchReviews = ->\n            $scope.searching_reviews = true\n            $http.get('/api/reviews?page=' + $scope.reviews_page).then (response) ->\n                $scope.searching_reviews = false\n                $scope.reviews = $scope.reviews.concat(response.data.reviews)\n                $scope.has_more_reviews = response.data.has_more_reviews\n                # if $scope.mobile then $timeout -> bindToggle()\n\n        bindArguments($scope, arguments)\n        $scope.selected_subject = '1'\n\n        $scope.refreshSelect = ->\n            $timeout ->\n                $('.custom-select-sort').trigger('render')\n\n        $scope.goSubject = (where) ->\n            streamLink($scope.subject_routes[$scope.selected_subject], 'serp_' + where, $scope.findById($scope.subjects, $scope.selected_subject).eng)\n\n        $scope.onWebsite = (tutor, type = 'month') ->\n            return if not tutor\n            current_year = parseInt(moment().format('YYYY'))\n            attachment_year = parseInt(moment(tutor.created_at).format('YYYY'))\n\n            current_month = parseInt(moment().format('M'))\n            attachment_month = parseInt(moment(tutor.created_at).format('M'))\n\n            month_diff = current_month - attachment_month\n            year_diff = current_year - attachment_year\n\n            # если месяц отрицательный\n            if month_diff < 0\n                month_diff = 12 + month_diff\n                year_diff--\n\n            if type is 'month' then month_diff else year_diff\n\n        $scope.randomReview = ->\n            $scope.loading_review = true\n            $http.get 'api/reviews/random'\n            .then (response) ->\n                $scope.random_review = response.data\n                $scope.loading_review = false\n","angular.module('Egerep')\n    .controller 'LoginCtrl', ($scope, $timeout, Sms, Tutor, StreamService) ->\n        bindArguments($scope, arguments)\n\n        login = ->\n            Tutor.login {}, (response) ->\n                $scope.tutor = response\n            , ->\n                $scope.tutor = null\n\n        login()\n\n        $scope.sendCode = ->\n            $scope.error_message = false\n            Sms.save\n                phone: $scope.phone\n            , ->\n                $scope.code_sent = true\n                $timeout -> $('#code-input').focus()\n            , ->\n                $scope.error_message = 'неверный номер телефона'\n\n        $scope.checkCode = ->\n            $scope.error_message = false\n            Sms.get\n                code: $scope.code\n            , ->\n                login()\n            , (response) ->\n                redirect('/') if response.status == 403\n                $scope.error_message = 'код введен неверно'\n","angular\n    .module 'Egerep'\n    .constant 'REVIEWS_PER_PAGE', 5\n    .controller 'Tutors', ($scope, $http, $timeout, Tutor, SubjectService, REVIEWS_PER_PAGE, Genders, Request, StreamService, Sources) ->\n        bindArguments($scope, arguments)\n\n        # сколько загрузок преподавателей было\n        search_count = 0\n\n        $scope.popups = {}\n\n        $scope.station_ids = {}\n\n        $scope.filterPopup = (popup) ->\n            $scope.popups[popup] = true\n            openModal(\"filter-#{popup}\") if $scope.mobile\n            StreamService.run('filter_open', popup)\n\n        # получить рейтинг с отклонием\n        $scope.getStarRating = (rating) ->\n            segment = (Math.floor(rating / 2) * 2) + 1\n            (segment - ((segment - rating) * 0.6)) * 10\n\n        # получить индекс преподавателя. если не указан, береш из хэша\n        $scope.getIndex = (index = null) ->\n            return (parseInt(index) + 1) if index isnt null\n            $scope.index_from_hash or null\n\n        $scope.streamLink = streamLink\n\n        $scope.profileLink = (tutor, index, async = true, event_name = 'tutor_profile') ->\n            index = $scope.getIndex(index)\n            link = \"#{tutor.id}\"\n            link += \"##{index}\" if index\n            window.open(link, '_blank') if async\n            StreamService.run 'go_' + event_name, StreamService.identifySource(tutor),\n                position: index\n                tutor_id: tutor.id\n            .then ->\n                window.location = link if not async\n\n        # личная страница преподавателя?\n        $scope.profilePage = ->\n            RegExp(/^\\/[\\d]+$/).test(window.location.pathname)\n\n        $scope.objectSelectedCallback = (selected_station) ->\n            if selected_station\n                $scope.search.station_id = selected_station.originalObject.id\n                $scope.$broadcast('angucomplete-alt:changeInput', 'stations-autocomplete', $scope.$eval(\"stations[search.station_id].title | cut:false:13:'...'\"))\n            else\n                $scope.search.station_id = null\n                $scope.$broadcast('angucomplete-alt:changeInput', 'stations-autocomplete', '')\n\n        $scope.clearStation = ->\n            $scope.$broadcast('angucomplete-alt:clearInput');\n            $scope.search.station_id = null\n            $timeout -> $('.autocomplete-input').focus()\n\n\n        bindWatchers = ->\n            $scope.$watchCollection 'search.subjects', (newVal, oldVal) ->\n                return if newVal is oldVal\n                dataLayerPush\n                    event: 'configuration'\n                    eventCategory: 'subjects'\n                    eventAction: $scope.SubjectService.getSelected().map((subject_id) -> $scope.subjects[subject_id].eng).join(',')\n                console.log\n                    event: 'configuration'\n                    eventCategory: 'subjects'\n                    eventAction: $scope.SubjectService.getSelected().map((subject_id) -> $scope.subjects[subject_id].eng).join(',')\n\n            $scope.$watchCollection 'search.place', (newVal, oldVal) ->\n                return if newVal is oldVal\n                dataLayerPush\n                    event: 'configuration'\n                    eventCategory: 'place'\n                    eventAction: $scope.search.place\n                console.log\n                    event: 'configuration'\n                    eventCategory: 'place'\n                    eventAction: $scope.search.place\n\n            $scope.$watchCollection 'search.sort', (newVal, oldVal) ->\n                return if newVal is oldVal\n                dataLayerPush\n                    event: 'configuration'\n                    eventCategory: 'sort'\n                    eventAction: $scope.search.sort\n                console.log\n                    event: 'configuration'\n                    eventCategory: 'sort'\n                    eventAction: $scope.search.sort\n\n            $scope.$watchCollection 'search.station_id', (newVal, oldVal) ->\n                return if newVal is oldVal\n                dataLayerPush\n                    event: 'configuration'\n                    eventCategory: 'station'\n                    eventAction: if $scope.search.station_id then $scope.stations[$scope.search.station_id].title else ''\n                console.log\n                    event: 'configuration'\n                    eventCategory: 'station'\n                    eventAction: if $scope.search.station_id then $scope.stations[$scope.search.station_id].title else ''\n\n        handleScrollDesktop = ->\n            wrapper = $('.new-filter-wrapper')\n            sticky = wrapper.position().top - 1\n            $(window).on 'scroll', ->\n                if $('.search-result-wrap-more').position().top - window.pageYOffset <= 560\n                    wrapper.removeClass('sticky')\n                    $('.new-filter-wrapper-left').addClass('stick-to-end')\n                else\n                    $('.new-filter-wrapper-left').removeClass('stick-to-end')\n                    if window.pageYOffset > sticky then wrapper.addClass('sticky') else wrapper.removeClass('sticky')\n\n        handleScrollMobile = ->\n            sticky = $('.filter-full-width').position().top - 1\n            $(window).on 'scroll', ->\n                wrapper = $('.filter-full-width')\n                if window.pageYOffset > sticky\n                    wrapper.addClass('sticky')\n                    $('.accordions').addClass('sticky')\n                else\n                    wrapper.removeClass('sticky')\n                    $('.accordions').removeClass('sticky')\n\n        # страница поиска\n        $timeout ->\n            if $scope.serp_new\n                $timeout(bindWatchers, 500)\n                $scope.stations_array = Object.values($scope.stations)\n                if $scope.search.station_id\n                    selected_station = _.find($scope.stations_array, (station) ->  station.id == parseInt($scope.search.station_id))\n                    $scope.$broadcast 'angucomplete-alt:changeInput', 'stations-autocomplete', selected_station\n            if not $scope.profilePage() and window.location.pathname isnt '/request'\n                if $scope.serp_new\n                    if $scope.mobile then handleScrollMobile() else handleScrollDesktop()\n\n                # if $scope.page_was_refreshed and $.cookie('search') isnt undefined\n                #     id = $scope.search.id\n                #     $scope.search = JSON.parse($.cookie('search'))\n                #     $scope.search.id = id\n\n                # если есть предустановленные предметы\n                if $scope.selected_subjects\n                    $scope.selected_subjects.split(',').forEach (subject_id) ->\n                        $scope.search.subjects[subject_id] = true\n\n                # place по умолчанию\n                # $scope.search.place = 1 if not $scope.search.place\n\n                if ($scope.search.priority == '2' || $scope.search.priority == '3')\n                    $scope.station_ids[$scope.search.priority] = $scope.search.station_id\n\n                SubjectService.init($scope.search.subjects)\n                StreamService.run('landing', 'serp')\n                $scope.filter()\n            else\n                $scope.index_from_hash = window.location.hash.substring(1)\n                StreamService.run 'landing', StreamService.identifySource(),\n                    if $scope.profilePage() then {tutor_id: $scope.tutor.id, position: $scope.getIndex()} else {}\n\n        # пары предметов\n        $scope.pairs = [\n            [1, 2]\n            [3, 4]\n            [6, 7]\n            [8, 9]\n        ]\n\n        # просмотренные преподаватели (чтобы не засчитывались просмотры несколько раз)\n        $scope.viewed_tutors = []\n\n        # сотрудничает с 12 сентября 2000 года\n        $scope.dateToText = (date) ->\n            text_date = moment(date).format 'DD MMMM YYYY'\n            # вырезаем дату, оставляем месяц и год\n            # нужно именно так, чтобы осталось правильное склонение месяца\n            text_date.substr(3)\n\n        $scope.onWebsite = (tutor, type = 'month') ->\n            return if not tutor\n            current_year = parseInt(moment().format('YYYY'))\n            attachment_year = parseInt(moment(tutor.created_at).format('YYYY'))\n\n            current_month = parseInt(moment().format('M'))\n            attachment_month = parseInt(moment(tutor.created_at).format('M'))\n\n            month_diff = current_month - attachment_month\n            year_diff = current_year - attachment_year\n\n            # если месяц отрицательный\n            if month_diff < 0\n                month_diff = 12 + month_diff\n                year_diff--\n\n            if type is 'month' then month_diff else year_diff\n\n        $scope.requestSent = (tutor) ->\n            tutor.request_sent or $scope.sent_ids.indexOf(tutor.id) isnt -1\n\n        # directionsService = new google.maps.DirectionsService()\n        # directionsDisplay = new google.maps.DirectionsRenderer()\n        $scope.gmap = (tutor, index) ->\n            tutor.map_initialized = true\n            # if tutor.map_shown is undefined then\n            # @todo: сделать так, чтобы ранее открытые карты не инициализировались заново\n            $timeout ->\n                map = new google.maps.Map document.getElementById(\"gmap-#{tutor.id}\"),\n                    center: MAP_CENTER\n                    scrollwheel: false,\n                    zoom: 8\n                    disableDefaultUI: true\n                    clickableLabels: false\n                    clickableIcons: false\n                    zoomControl: true\n                    zoomControlOptions:\n                        position: google.maps.ControlPosition.LEFT_BOTTOM\n                    scaleControl: true\n\n                # directionsDisplay.setMap(map)\n\n                bounds = new (google.maps.LatLngBounds)\n                tutor.markers.forEach (marker) ->\n                    marker_location = new google.maps.LatLng(marker.lat, marker.lng)\n                    # closest_metro = marker.metros[0]\n                    bounds.extend(marker_location)\n                    new_marker = newMarker(marker_location, map)\n\n                # one marker bug fix\n                if bounds.getNorthEast().equals(bounds.getSouthWest())\n                    extendPoint1 = new google.maps.LatLng(bounds.getNorthEast().lat() + 0.005, bounds.getNorthEast().lng() + 0.005)\n                    extendPoint2 = new google.maps.LatLng(bounds.getNorthEast().lat() - 0.005, bounds.getNorthEast().lng() - 0.005)\n                    bounds.extend(extendPoint1)\n                    bounds.extend(extendPoint2)\n\n                map.fitBounds bounds\n                map.panToBounds bounds\n                map.setZoom if tutor.markers.length > 1 then 11 else 16\n\n                # bug fix – убираем квадратик в правом нижнем углу\n                google.maps.event.addListenerOnce map, 'idle', ->\n                    $('div:has(>a[href^=\"https://www.google.com/maps\"])').remove()\n\n            $scope.toggleShow(tutor, 'map_shown', 'google_map', index)\n\n        $scope.getMetros = (tutor) ->\n            _.chain(tutor.markers).pluck('metros').flatten().value()\n\n        $scope.loadReviews = (tutor) ->\n            if tutor.all_reviews is undefined\n                tutor.reviews_loading = true\n                tutor.all_reviews = Tutor.reviews\n                    id: tutor.id\n                , (response) ->\n                    tutor.reviews_loading = false\n                    $scope.showMoreReviews(tutor)\n\n        $scope.reviews = (tutor, index) ->\n            StreamService.run 'reviews', StreamService.identifySource(tutor),\n                position: $scope.getIndex(index)\n                tutor_id: tutor.id\n            if tutor.all_reviews is undefined\n                tutor.all_reviews = Tutor.reviews\n                    id: tutor.id\n                , (response) ->\n                    $scope.showMoreReviews(tutor)\n            $scope.toggleShow(tutor, 'show_reviews', 'reviews', false)\n\n        $scope.showMoreReviews = (tutor, index) ->\n            if tutor.all_reviews is undefined\n                $scope.loadReviews(tutor)\n                return\n            if tutor.reviews_page then StreamService.run 'reviews_more', StreamService.identifySource(tutor),\n                position: $scope.getIndex(index)\n                tutor_id: tutor.id\n                depth: (tutor.reviews_page + 1) * REVIEWS_PER_PAGE + (if tutor.reviews_page == 1 then 2 else 0)\n            tutor.reviews_page = if not tutor.reviews_page then 1 else (tutor.reviews_page + 1)\n            from = (tutor.reviews_page - 1) * REVIEWS_PER_PAGE + 2\n            to = from + REVIEWS_PER_PAGE\n            tutor.displayed_reviews = tutor.all_reviews.slice(0, to)\n            highlight('search-result-reviews-text')\n\n        $scope.reviewsLeft = (tutor) ->\n            reviews_left = tutor.reviews_count - tutor.displayed_reviews.length\n            if reviews_left > REVIEWS_PER_PAGE then REVIEWS_PER_PAGE else reviews_left\n\n        # чтобы не редиректило в начале\n        filter_used = false\n        $scope.filter = (type = null) ->\n            $scope.popups = {}\n            closeModal()\n            $scope.tutors = []\n            $scope.page = 1\n            if filter_used\n                StreamService.updateCookie({search: StreamService.cookie.search + 1})\n                if $scope.serp_new\n                    params =\n                        search: StreamService.cookie.search\n                        subjects: $scope.SubjectService.getSelected().join(',')\n                        station_id: $scope.search.station_id\n                        sort: $scope.search.sort\n                        place: $scope.search.place\n                else\n                    params =\n                        search: StreamService.cookie.search\n                        subjects: $scope.SubjectService.getSelected().join(',')\n                        station_id: $scope.search.station_id\n                        priority: $scope.search.priority\n                StreamService.run('filter', type, params).then -> filter()\n            else\n                filter()\n                filter_used = true\n\n        filter = ->\n            search()\n            # деселект hidden_filter при смене параметров\n            delete $scope.search.hidden_filter if $scope.search.hidden_filter and search_count\n            $.cookie('search', JSON.stringify($scope.search))\n\n        $scope.nextPage = ->\n            $scope.page++\n            StreamService.run('load_more_tutors', null, {page: $scope.page})\n            search()\n\n        $scope.$watch 'page', (newVal, oldVal) -> $.cookie('page', $scope.page) if newVal isnt undefined\n\n        $scope.isLastPage = ->\n            return if not $scope.data\n            $scope.data.current_page >= $scope.data.last_page\n\n        $scope.unselectSubjects = (subject_id) ->\n            angular.forEach $scope.search.subjects, (enabled, id) ->\n                if subject_id\n                    pair = _.filter scope.pairs, (p) ->\n                        p.indexOf(parseInt(subject_id)) isnt -1\n                    pair.push([subject_id]) if not pair.length\n                    $scope.search.subjects[id] = false if pair[0].indexOf(parseInt(id)) is -1\n                else\n                    $scope.search.subjects[id] = false\n\n        search = ->\n            $scope.searching = true\n            Tutor.search\n                filter_used: filter_used\n                tutor_id: getUrlParam('tutor_id')\n                page: $scope.page\n                search: $scope.search\n            , (response) ->\n                search_count++\n                $scope.searching = false\n                if response.hasOwnProperty('url')\n                    console.log 'redirectring...'\n                    redirect response.url\n                    # console.log response.url\n                else\n                    $scope.data = response\n                    $scope.tutors = $scope.tutors.concat(response.data)\n                    #comma separated fields\n                    angular.forEach $scope.tutors, (tutor) ->\n                        tutor.svg_map = _.filter tutor.svg_map.split(',') if 'string' == typeof tutor.svg_map\n                    highlight('search-result-text')\n                    if $scope.mobile then $timeout -> bindToggle()\n                    $timeout -> window.dispatchEvent(new Event('scroll'))\n\n        # highlight hidden filter\n        highlight = (className)->\n            if $scope.search and $scope.search.hidden_filter then $timeout ->\n                $.each $scope.search.hidden_filter, (index, phrase) ->\n                    $(\".#{className}\").mark phrase,\n                        separateWordSearch: true\n                        accuracy:\n                            value: 'exactly'\n                            limiters: ['!', '@', '#', '&', '*', '(', ')', '-', '–', '—', '+', '=', '[', ']', '{', '}', '|', ':', ';', '\\'', '\\\"', '‘', '’', '“', '”', ',', '.', '<', '>', '/', '?']\n\n        $scope.showSvg = (tutor, index) ->\n            $scope.toggleShow(tutor, 'show_svg', 'metro_map', index)\n\n        # stream if index isnt null\n        $scope.toggleShow = (tutor, prop, iteraction_type, index = null) ->\n            if tutor[prop]\n                $timeout ->\n                    tutor[prop] = false\n                , if $scope.mobile then 400 else 0\n            else\n                tutor[prop] = true\n                if index isnt false then StreamService.run iteraction_type, StreamService.identifySource(tutor),\n                    position: $scope.getIndex(index)\n                    tutor_id: tutor.id\n\n        $scope.shortenGrades = (tutor) ->\n            a = tutor.grades\n            return if a.length < 1\n            limit = a.length - 1\n            combo_end = -1\n            pairs = []\n            i = 0\n            while i <= limit\n                combo_start = parseInt(a[i])\n\n                if combo_start > 11\n                    i++\n                    combo_end = -1\n                    pairs.push $scope.grades[combo_start].title\n                    continue\n\n                if combo_start <= combo_end\n                    i++\n                    continue\n\n                j = i\n                while j <= limit\n                    combo_end = parseInt(a[j])\n                    # если уже начинает искать по студентам\n                    break if combo_end >= 11\n                    break if parseInt(a[j + 1]) - combo_end > 1\n                    j++\n                if combo_start != combo_end\n                    pairs.push combo_start + '–' + combo_end + ' классы'\n                else\n                    pairs.push combo_start + ' класс'\n                i++\n            pairs.join ', '\n\n        #\n        # MOBILE\n        #\n        $scope.popup = (id, tutor = null, fn = null, index = null) ->\n            openModal(id)\n            if tutor isnt null then $scope.popup_tutor = tutor\n            if fn isnt null then $timeout -> $scope[fn](tutor, index)\n            $scope.index = $scope.getIndex(index)\n\n        $scope.request = (tutor, index) ->\n            StreamService.run 'contact_tutor_button', StreamService.identifySource(tutor),\n                position: $scope.getIndex(index)\n                tutor_id: tutor.id\n\n        $scope.expandMoreInfo = (tutor, index) ->\n            tutor.expand_info = true\n            StreamService.run 'expand_more_tutor_info', StreamService.identifySource(tutor),\n                position: $scope.getIndex(index)\n                tutor_id: tutor.id\n\n        $scope.expand = (tutor, index) ->\n            tutor.is_expanded = !tutor.is_expanded\n            $scope.gmap(tutor, index) if not tutor.map_initialized\n            event_name = if tutor.is_expanded then 'expand_tutor_info' else 'shrink_tutor_info'\n            StreamService.run event_name, StreamService.identifySource(tutor),\n                position: $scope.getIndex(index)\n                tutor_id: tutor.id\n\n        $scope.setPriority = (priority_id) ->\n            $scope.search.priority = priority_id if priority_id != 2 && priority_id != 3\n\n        $scope.syncSort = (priority_id) ->\n            if priority_id == 2 || priority_id == 3\n                if not $scope.station_ids[priority_id]\n                    $scope.search.priority = 1\n                    return\n                $scope.search.station_id = $scope.station_ids[priority_id]\n            $scope.search.priority = priority_id\n\n        $scope.changeFilter = (param, value = null) ->\n            $scope.search[param] = value if value isnt null\n            $scope.overlay[param] = false\n            $scope.filter()\n\n        # выезжает на выбранную станцию\n        $scope.hasSelectedStation = (tutor) ->\n            return false if not $scope.search or $scope.search.sort != 5\n            tutor.svg_map.indexOf(parseInt($scope.search.station_id)) isnt -1\n\n        # выезжает по всей Москве\n        $scope.departsEverywhere = (tutor) ->\n            return false if not tutor.svg_map\n            # @todo: в мобильной версии svg_map – string, в стационарной – array\n            tutor.svg_map = tutor.svg_map.split(',') if typeof tutor.svg_map is 'string'\n            tutor.svg_map.length >= 214\n\n        $scope.sendRequest = ->\n            $scope.sending_tutor.request = {} if $scope.sending_tutor.request is undefined\n            $scope.sending_tutor.request.tutor_id = $scope.sending_tutor.id\n            Request.save $scope.sending_tutor.request, ->\n                $scope.sending_tutor.request_sent = true\n            , (response) ->\n                if response.status is 422\n                    angular.forEach response.data, (errors, field) ->\n                        selector = \"[ng-model$='#{field}']\"\n                        $('.request-overlay').find(\"input#{selector}, textarea#{selector}\").focus().notify errors[0], notify_options\n                else\n                    $scope.sending_tutor.request_error = true\n\n        angular.element(document).ready ->\n            if $scope.mobile then $timeout -> bindToggle()\n","angular.module('Egerep')\n    .value 'Genders',\n        male: 'мужской'\n        female: 'женский'\n    .value 'Sources',\n        LANDING: 'landing'\n        LANDING_PROFILE: 'landing_profile'\n        LANDING_HELP: 'landing_help'\n        FILTER: 'filter'\n        PROFILE_REQUEST: 'profilerequest'\n        SERP_REQUEST: 'serprequest'\n        HELP_REQUEST: 'helprequest'\n        MORE_TUTORS: 'more_tutors'\n","angular.module('Egerep')\n    .factory 'Tutor', ($resource) ->\n        $resource apiPath('tutors'), {id: '@id', type: '@type'},\n            search:\n                method: 'POST'\n                url: apiPath('tutors', 'search')\n            reviews:\n                method: 'GET'\n                isArray: true\n                url: apiPath('tutors', 'reviews')\n            login:\n                method: 'GET'\n                url: apiPath('tutors', 'login')\n\n    .factory 'Request', ($resource) ->\n        $resource apiPath('requests'), {id: '@id'}, updatable()\n\n    .factory 'Sms', ($resource) ->\n        $resource apiPath('sms'), {id: '@id'}, updatable()\n\n    .factory 'Cv', ($resource) ->\n        $resource apiPath('cv'), {id: '@id'}\n\n    .factory 'Stream', ($resource) ->\n        $resource apiPath('stream'), {id: '@id'}\n\napiPath = (entity, additional = '') ->\n    \"/api/#{entity}/\" + (if additional then additional + '/' else '') + \":id\"\n\n\nupdatable = ->\n    update:\n        method: 'PUT'\ncountable = ->\n    count:\n        method: 'GET'\n","angular.module('Egerep')\n    .directive 'ngAge', ->\n        restrict: 'A'\n        require: 'ngModel'\n        scope:\n            ngModel: '='\n            prefix: '@'\n        link: (scope, element, attrs, ngModel) ->\n            updateModel = (value) ->\n                ngModel.$setViewValue(value)\n                ngModel.$render()\n\n            $(element)\n                .on 'blur', ->\n                    $('.age-field').removeClass('has-error')\n                    age_to = scope.$parent.search.age_to\n                    age_from = scope.$parent.search.age_from\n                    if (age_to && age_from)\n                        $('.age-field').addClass('has-error') if getNumber(age_from) > getNumber(age_to)\n                    updateModel(scope.prefix + ' ' + scope.ngModel + ' лет') if scope.ngModel\n                .on 'keyup', -> updateModel(getNumber(scope.ngModel))\n                .on 'focus', -> updateModel(getNumber(scope.ngModel))\n\n","# angular.module('Egerep').directive 'comments', ->\n#     restrict: 'E'\n#     templateUrl: 'directives/comments'\n#     scope:\n#         user: '='\n#         entityId: '='\n#         trackLoading: '='\n#         entityType: '@'\n#     controller: ($rootScope, $scope, $timeout, Comment) ->\n#         $scope.show_max = 4                 # сколько комментов показывать в свернутом режиме\n#         $scope.show_all_comments = false    # показать все комментарии?\n#         $scope.is_dragging = false          # комментарий перетаскивается\n#\n#         bindDraggable = (comment_id) ->\n#             $(\"#comment-#{comment_id}\").draggable\n#                 revert: 'invalid'\n#                 activeClass: 'drag-active'\n#                 start: (e, ui) ->\n#                     $scope.is_dragging = true\n#                     $scope.$apply()\n#                 stop: (e, ui) ->\n#                     $scope.is_dragging = false\n#                     $scope.$apply()\n#\n#         $timeout ->\n#             $scope.comments.forEach (comment) ->\n#                 bindDraggable(comment.id)\n#             $(\"#comment-delete-#{$scope.entityType}-#{$scope.entityId}\").droppable\n#                 tolerance: 'pointer'\n#                 hoverClass: 'hovered'\n#                 drop: (e, ui) ->\n#                     $scope.remove($(ui.draggable).data('comment-id'))\n#         , 2000\n#\n#         $scope.showAllComments = ->\n#             $scope.show_all_comments = true\n#             $timeout ->\n#                 $scope.comments.forEach (comment) ->\n#                     bindDraggable(comment.id)\n#\n#         $scope.getComments = ->\n#             if ($scope.show_all_comments or $scope.comments.length <= $scope.show_max) then $scope.comments else _.last($scope.comments, $scope.show_max - 1)\n#\n#         # перезагружаем комменты, если меняется entity_id\n#         $scope.$watch 'entityId', (newVal, oldVal) ->\n#             $scope.comments = Comment.query\n#                 entity_type: $scope.entityType\n#                 entity_id: newVal\n#             , ->\n#                 $rootScope.loaded_comments++ if $scope.trackLoading\n#\n#         $scope.formatDateTime = (date) ->\n#             moment(date).format \"DD.MM.YY в HH:mm\"\n#\n#         $scope.startCommenting = (event) ->\n#             $scope.start_commenting = true\n#             $timeout ->\n#                 $(event.target).parent().find('input').focus()\n#\n#         $scope.endCommenting = ->\n#             $scope.comment = ''\n#             $scope.start_commenting = false\n#\n#         $scope.remove = (comment_id) ->\n#             _.find($scope.comments, {id: comment_id}).$remove()\n#             $scope.comments = _.without($scope.comments, _.findWhere($scope.comments, {id: comment_id}))\n#\n#         $scope.edit = (comment, event) ->\n#             old_text    = comment.comment\n#             element     = $(event.target)\n#\n#             element.unbind('keydown').unbind('blur')\n#\n#             element.attr('contenteditable', 'true').focus()\n#                 .on 'keydown', (e) ->\n#                     console.log old_text\n#                     if e.keyCode is 13\n#                         $(@).removeAttr('contenteditable').blur()\n#                         comment.comment = $(@).text()\n#                         comment.$update()\n#                     if e.keyCode is 27\n#                         $(@).blur()\n#\n#                 .on 'blur', (e) ->\n#                     if element.attr 'contenteditable'\n#                         console.log old_text\n#                         element.removeAttr('contenteditable').html old_text\n#             return\n#             # setEndOfContenteditable(event.target)\n#\n#         $scope.submitComment = (event) ->\n#             if event.keyCode is 13\n#                 new_comment = new Comment\n#                     comment: $scope.comment\n#                     user_id: $scope.user.id\n#                     entity_id: $scope.entityId\n#                     entity_type: $scope.entityType\n#                 new_comment.$save()\n#                     .then (response)->\n#                         console.log response\n#                         new_comment.user = $scope.user\n#                         new_comment.id = response.id\n#                         $scope.comments.push new_comment\n#                         $timeout ->\n#                             bindDraggable(new_comment.id)\n#                 $scope.endCommenting()\n#\n#             if event.keyCode is 27\n#                 $(event.target).blur()\n","# angular.module('Egerep').directive 'email', ->\n#     restrict: 'E'\n#     templateUrl: 'directives/email'\n#     scope:\n#         entity: '='\n#     controller: ($scope) ->\n#         $scope.send = ->\n#             $('#email-modal').modal 'show'\n#     # controller: ($scope, $timeout, Email) ->\n#     #     # массовая отправка?\n#     #     $scope.mass = false\n#     #\n#     #     # подсчитать СМС\n#     #     $scope.smsCount = ->\n#     #         SmsCounter.count($scope.message || '').messages\n#     #\n#     #     # отправить\n#     #     $scope.send = ->\n#     #         if $scope.message\n#     #             sms = new Sms\n#     #                 message: $scope.message\n#     #                 to: $scope.number\n#     #                 mass: $scope.mass\n#     #             sms.$save()\n#     #\n#     #     # подгружаем историю, если номер телефона меняется\n#     #     $scope.$watch 'number', (newVal, oldVal) ->\n#     #         console.log $scope.$parent.formatDateTime($scope.created_at)\n#     #         $scope.history = Sms.query({number: newVal}) if newVal\n","angular.module('Egerep').directive 'errors', ->\n    restrict: 'E'\n    templateUrl: 'directives/errors'\n    scope:\n        model: '@'\n    controller: ($scope, $element, $attrs) ->\n        $scope.only_first = $attrs.hasOwnProperty('onlyFirst')\n\n        $scope.getErrors = ->\n            return if $scope.$parent.errors is undefined\n            errors = $scope.$parent.errors[$scope.model]\n            return if not errors\n            if $scope.only_first then [errors[0]] else errors\n","angular.module 'Egerep'\n    .directive 'hideLoopedLink', ->\n        restrict: 'A'\n        link: ($scope, $element) ->\n            if window.location.pathname is $element.attr('href')\n                if window.location.pathname is '/'\n                    $element.removeAttr('href')\n                else\n                    $element.parent().remove()\n","angular.module('Egerep').directive 'icheck', ($timeout, $parse) ->\n  {\n    require: 'ngModel'\n    link: ($scope, element, $attrs, ngModel) ->\n      $timeout ->\n        value = undefined\n        value = $attrs['value']\n        $scope.$watch $attrs['ngModel'], (newValue) ->\n          $(element).iCheck 'update'\n          return\n        $(element).iCheck(\n          checkboxClass: 'custom-checkbox',\n          radioClass: 'custom-radio',\n          checkedClass: 'checked',\n          cursor: true).on 'ifChanged', (event) ->\n          if $(element).attr('type') == 'checkbox' and $attrs['ngModel']\n            $scope.$apply ->\n              ngModel.$setViewValue event.target.checked\n          if $(element).attr('type') == 'radio' and $attrs['ngModel']\n            return $scope.$apply(->\n              ngModel.$setViewValue value\n            )\n          return\n\n  }\n","angular.module('Egerep').directive 'inView', ->\n    restrict: 'A'\n    scope:\n        tutor: '=tutor'\n        index: '=index'\n    link: ($scope, $element, $attrs) ->\n        # offset, чтобы было только при 100% видимости засчитывало\n        # elementOffset.top += elementSize.height - 10\n        $($element).on 'inview', (event, isInView) ->\n            if isInView and $scope.$parent.viewed_tutors.indexOf($scope.tutor.id) is -1\n                $scope.$parent.viewed_tutors.push($scope.tutor.id)\n                $scope.$parent.StreamService.run 'view', $scope.$parent.StreamService.identifySource($scope.tutor),\n                    tutor_id: $scope.tutor.id\n                    position: $scope.index or null\n                $($element).off('inview')\n","# angular.module('Egerep').directive 'inputComment', ->\n#     restrict: 'E'\n#     templateUrl: 'directives/input-comment'\n#     scope:\n#         entity: '='\n#         commentField: '@'\n#     controller: ($scope, $timeout) ->\n#         $scope.is_being_commented = false\n#\n#         $scope.blurComment = ->\n#             $scope.is_being_commented = false\n#\n#         $scope.focusComment = ->\n#             $scope.is_being_commented = true\n#\n#         $scope.startComment = (event) ->\n#             $scope.is_being_commented = true\n#             $timeout ->\n#                 $(event.target).parent().children('input').focus()\n#\n#         $scope.endComment =  (event) ->\n#             if event.keyCode is 13\n#                 $(event.target).blur()\n#                 return\n","# angular.module 'Egecms'\n#     .directive 'ngMulti', ->\n#         restrict: 'E'\n#         replace: true\n#         scope:\n#             object: '='\n#             model: '='\n#             label: '@'\n#             noneText: '@'\n#         templateUrl: 'directives/ngmulti'\n#         controller: ($scope, $element, $attrs, $timeout) ->\n#             $timeout ->\n#                 $($element).selectpicker\n#                     noneSelectedText: $scope.noneText\n#             , 100\n","# angular.module('Egerep').directive 'pencilInput', ->\n#     restrict: 'E'\n#     replace: true\n#     templateUrl: 'directives/pencil-input'\n#     scope:\n#         model: '='\n#     controller: ($scope, $timeout, $element, $controller) ->\n#         $scope.is_being_commented = false\n#\n#         $scope.blurComment = ->\n#             $scope.is_being_commented = false\n#\n#         $scope.focusComment = ->\n#             $scope.is_being_commented = true\n#\n#         $scope.startComment = (event) ->\n#             $scope.is_being_commented = true\n#             $timeout ->\n#                 $(event.target).parent().children('div').focus()\n#\n#         $scope.watchEnter = (event) ->\n#             if event.keyCode in [13, 27]\n#                 # @todo: надо изменить\n#                 if event.keyCode is 13\n#                     $scope.model = $(event.target).parent().children('div').text()\n#\n#                 $(event.target).parent().children('div').text($scope.model)\n#                 event.preventDefault()\n#                 $(event.target).blur()\n#             return\n","angular.module('Egerep')\n    .directive 'ngPhone', ->\n        restrict: 'A'\n        link: ($scope, element) ->\n            $(element).inputmask(\"+7 (999) 999-99-99\", { autoclear: false, showMaskOnHover: false })\n","# angular.module('Egerep').directive 'phones', ->\n#     restrict: 'E'\n#     templateUrl: 'directives/phones'\n#     scope:\n#         entity: '='\n#     controller: ($scope, $timeout, $rootScope, PhoneService, UserService) ->\n#         $scope.PhoneService = PhoneService\n#         $scope.UserService  = UserService\n#\n#         console.log $scope.entityType\n#\n#         # level depth\n#         $rootScope.dataLoaded.promise.then (data) ->\n#             $scope.level = if $scope.entity.phones and $scope.entity.phones.length then $scope.entity.phones.length else 1\n#\n#         $scope.nextLevel = ->\n#             $scope.level++\n#\n#         $scope.phoneMaskControl = (event) ->\n#             el = $(event.target)\n#             # grabs string phone_2 from object model.phone2\n#             # so it can be accessible by key\n#             phone_id = el.attr('ng-model').split('.')[1]\n#             $scope.entity[phone_id] = $(event.target).val()\n#\n#         $scope.isFull = (number) ->\n#             return false if number is undefined or number is \"\"\n#             !number.match(/_/)\n#\n#         # отправить смс\n#         $scope.sms = (number) ->\n#             $('#sms-modal').modal 'show'\n#             $rootScope.sms_number = number\n#\n#         # информация по api\n#         $scope.info = (number) ->\n#             $scope.api_number = number\n#             $scope.mango_info = null\n#             $('#api-phone-info').modal 'show'\n#             PhoneService.info(number).then (response) ->\n#                 console.log response.data\n#                 $scope.mango_info = response.data\n#\n#         $scope.formatDateTime = (date) ->\n#             moment(date).format \"DD.MM.YY в HH:mm\"\n#\n#         $scope.time = (seconds) ->\n#             moment({}).seconds(seconds).format(\"mm:ss\")\n#\n#         $scope.getNumberTitle = (number) ->\n#             console.log number, $scope.api_number\n#             return 'текущий номер' if number is PhoneService.clean($scope.api_number)\n#             number\n#\n#         recodringLink = (recording_id) ->\n#             api_key   = 'goea67jyo7i63nf4xdtjn59npnfcee5l'\n#             api_salt  = 't9mp7vdltmhn0nhnq0x4vwha9ncdr8pa'\n#             timestamp = moment().add(5, 'minute').unix()\n#\n#             sha256 = new jsSHA('SHA-256', 'TEXT')\n#             sha256.update(api_key + timestamp + recording_id + api_salt)\n#             sign = sha256.getHash('HEX')\n#\n#             return \"https://app.mango-office.ru/vpbx/queries/recording/link/#{recording_id}/play/#{api_key}/#{timestamp}/#{sign}\"\n#\n#         $scope.play = (recording_id) ->\n#             $scope.audio.pause() if $scope.audio\n#             $scope.audio = new Audio recodringLink(recording_id)\n#             $scope.audio.play()\n#             $scope.is_playing = recording_id\n#\n#         $scope.isPlaying = (recording_id) ->\n#             $scope.is_playing is recording_id\n#\n#         $scope.stop = (recording_id) ->\n#             $scope.is_playing = null\n#             $scope.audio.pause()\n#\n#         $scope.disconnectReason = (data) ->\n#             # return 'НБТ' if data.to_extension is '' and data.disconnect_reason is '1100'\n#             data.disconnect_reason\n","angular.module 'Egerep'\n    .directive 'plural', ->\n        restrict: 'E'\n        scope:\n            count: '='      # кол-во\n            type: '@'       # тип plural age | student | ...\n            noneText: '@'   # текст, если кол-во равно нулю\n        templateUrl: '/directives/plural'\n        controller: ($scope, $element, $attrs, $timeout) ->\n            $scope.textOnly = $attrs.hasOwnProperty('textOnly')\n            $scope.hideZero = $attrs.hasOwnProperty('hideZero')\n\n            $scope.when =\n                'age': ['год', 'года', 'лет']\n                'month': ['месяц', 'месяца', 'месяцев']\n                'student': ['ученик', 'ученика', 'учеников']\n                'minute': ['минуту', 'минуты', 'минут']\n                'hour': ['час', 'часа', 'часов']\n                'day': ['день', 'дня', 'дней']\n                'meeting': ['встреча', 'встречи', 'встреч']\n                'score': ['балл', 'балла', 'баллов']\n                'rubbles': ['рубль', 'рубля', 'рублей']\n                'lesson': ['занятие', 'занятия', 'занятий']\n                'client': ['клиент', 'клиента', 'клиентов']\n                'mark': ['оценки', 'оценок', 'оценок']\n                'marks': ['оценка', 'оценки', 'оценок']\n                'review': ['отзыв', 'отзыва', 'отзывов']\n                'request': ['заявка', 'заявки', 'заявок']\n                'station': ['станцию', 'станции', 'станций']\n                'tutor': ['репетитор', 'репетитора', 'репетиторов']\n                'profile': ['анкета', 'анкеты', 'анкет']\n                'schooler': ['школьник нашел', 'школьника нашли', 'школьников нашли']\n                'taught': ['подготовлен', 'подготовлено', 'подготовлено']\n                'address': ['адрес', 'адреса', 'адресов']\n","# angular.module 'Egerep'\n#     .directive 'plus', ->\n#         restrict: 'E'\n#         scope:\n#             previous: '='\n#             count: '='\n#         templateUrl: 'directives/plus'\n","angular.module('Egerep')\n    .directive 'requestForm', ->\n        replace: true\n        scope:\n            tutor: '='\n            sentIds: '='\n            index: '='\n            source: '@'\n        templateUrl: (elem, attrs) ->\n            if attrs.hasOwnProperty('mobile') then 'directives/request-form-mobile' else 'directives/request-form'\n        controller: ($scope, $element, $timeout, $rootScope, Request, Sources) ->\n            # отправить заявку\n            $scope.request = ->\n                $scope.tutor = {} if not $scope.tutor\n                $scope.tutor.request = {} if $scope.tutor.request is undefined\n                $scope.tutor.request.tutor_id = $scope.tutor.id\n                Request.save $scope.tutor.request, ->\n                    $scope.tutor.request_sent = true\n                    $scope.$parent.StreamService.run 'request', $scope.source || $scope.$parent.StreamService.identifySource($scope.tutor),\n                        position: $scope.index or $scope.$parent.index\n                        tutor_id: $scope.tutor.id\n                    trackDataLayer()\n                , (response) ->\n                    if response.status is 422\n                        angular.forEach response.data, (errors, field) ->\n                            selector = \"[ng-model$='#{field}']\"\n                            # $('html,body').animate({scrollTop: $(\"input#{selector}, textarea#{selector}\").first().offset().top}, 0)\n                            $($element).find(\"input#{selector}, textarea#{selector}\").focus().notify errors[0], notify_options\n                    else\n                        $scope.tutor.request_error = true\n\n            trackDataLayer = ->\n                dataLayerPush\n                    event: 'purchase'\n                    ecommerce:\n                        currencyCode: 'RUB'\n                        purchase:\n                            actionField:\n                                id: googleClientId()\n                                affiliation: $scope.$parent.StreamService.identifySource()\n                                revenue: $scope.tutor.public_price\n                            products: [\n                                id: $scope.tutor.id\n                                price: $scope.tutor.public_price\n                                brand: if $scope.tutor.subjects then $scope.tutor.subjects.join(',') else null\n                                category: $scope.tutor.gender + '_' + $scope.tutor.age # пол_возраст\n                                quantity: 1\n                            ]\n","# angular.module 'Egecms'\n#     .directive 'ngSelect', ->\n#         restrict: 'E'\n#         replace: true\n#         scope:\n#             object: '='\n#             model: '='\n#             noneText: '@'\n#             label: '@'\n#         templateUrl: 'directives/ngselect'\n#         controller: ($scope, $element, $attrs, $timeout) ->\n#             # выбираем первое значение по умолчанию, если нет noneText\n#             if not $scope.noneText\n#                 $scope.model = _.first Object.keys($scope.object)\n#\n#             $timeout ->\n#                 $($element).selectpicker()\n#             , 100\n","angular.module 'Egerep'\n    .directive 'subjectList', ->\n        restrict: 'E'\n        scope:\n            subjects: '='\n            subjectIds: '='\n            case: '@'\n        templateUrl: '/directives/subject-list'\n        controller: ($scope, $element, $attrs, $rootScope) ->\n            $scope.byId = $attrs.byId isnt undefined\n            $scope.case = 'dative' if $scope.case is undefined\n            $scope.findById = $rootScope.findById\n","angular.module 'Egerep'\n    .directive 'tutorName', ->\n        restrict: 'E'\n        scope:\n            tutor: '='\n        templateUrl: '/directives/tutor-name'\n","# angular.module 'Egerep'\n#     .directive 'tutorPhoto', ->\n#         restrict: 'E'\n#         replace: true\n#         scope:\n#             tutor: '='\n#             version: '='\n#         templateUrl: 'directives/tutor-photo'\n","# #\n# # Dependencies: UserService should be available in parent scope!\n# #\n#\n# angular.module 'Egerep'\n#     .directive 'userSwitch', ->\n#         restrict: 'E'\n#         scope:\n#             entity: '='\n#             resource: '='\n#             userId: '@'\n#         templateUrl: 'directives/user-switch'\n#         controller: ($scope) ->\n#             $scope.UserService = $scope.$parent.UserService\n","# angular.module 'Egerep'\n#     .directive 'user', ->\n#         restrict: 'E'\n#         scope:\n#             model: '='      # кол-во\n#         templateUrl: 'directives/user'\n","angular.module('Egerep').directive 'widgetLoadable', ($q, $timeout) ->\n    restrict: 'A'\n    scope:\n        field: '='\n    link: ($scope, $element, $attrs) ->\n        q = $q.defer()\n\n        $toggleBlock = $($element).children('.toggle-widget__inner')\n\n        $($element).find('.widget-loadable__title').on('click').click ->\n            text = $(@).find('span').text()\n            if not q.promise.$$state.status\n                $(@).find('span').html(\"<span class='loading loading-inside-widget'>загрузка</span>\")\n            else\n                $(@).find('span').text(text)\n            q.promise.then =>\n                $(@).parent().toggleClass('arrow-active')\n                $(@).find('span').text(text)\n                $toggleBlock.stop()\n                $toggleBlock.slideToggle()\n\n        $scope.$watch 'field', (newVal, oldVal) -> if newVal isnt undefined then q.resolve(true)\n        # $scope.$watch 'field', (newVal, oldVal) ->\n        #     if newVal isnt undefined then $timeout ->\n        #         q.resolve(true)\n        #     , 50000\n","angular.module 'Egerep'\n    .service 'PhoneService', ->\n        # проверить перед отправкой форму\n        this.checkForm = (element)->\n            phone_element = $(element).find('.phone-field')\n\n            # номер телефона не заполнен полностью\n            if not isFull(phone_element.val())\n                phone_element.focus().notify 'номер телефона не заполнен полностью', notify_options\n                return false\n\n            # номер должен начинаться с 9 или 4\n            phone_number = phone_element.val().match(/\\d/g).join('')\n            if phone_number[1] != '4' and phone_number[1] != '9'\n                phone_element.focus().notify 'номер должен начинаться с 9 или 4', notify_options\n                return false\n            true\n\n        # номер телефона полный\n        isFull = (number) ->\n            return false if number is undefined or number is \"\"\n            !number.match(/_/)\n\n        this\n","angular.module 'Egerep'\n    .service 'StreamService', ($http, $timeout, Stream, SubjectService, Sources) ->\n        this.identifySource = (tutor = undefined) ->\n            return 'similar' if tutor isnt undefined and tutor.is_similar\n            return 'tutor' if RegExp(/^\\/[\\d]+$/).test(window.location.pathname)\n            return 'help' if window.location.pathname is '/request'\n            return 'main' if window.location.pathname is '/'\n            return 'serp'\n\n        this.generateEventString = (params) ->\n            search = $.cookie('search')\n            if search isnt undefined then $.each JSON.parse(search), (key, value) ->\n                params[key] = value if not params.hasOwnProperty(key)\n            parts = []\n            $.each params, (key, value) ->\n                return if key in ['action', 'type', 'google_id', 'yandex_id', 'id', 'hidden_filter', 'sort', 'place', 'gender'] or not value\n                switch key\n                    when 'priority'\n                        switch parseInt(value)\n                            when 2 then value = 'tutor'\n                            when 3 then value = 'client'\n                            when 4 then value = 'maxprice'\n                            when 5 then value = 'minprice'\n                            when 6 then value = 'rating'\n                            else value = 'pop'\n                    # when 'age_from', 'age_to' then value = value.replace(/\\D/g,'')\n                    when 'subjects' then if typeof(value) is \"object\" then value = SubjectService.getSelected(value).join(',')\n                parts.push(key + '=' + value)\n            return parts.join('_')\n\n        this.updateCookie = (params) ->\n            this.cookie = {} if this.cookie is undefined\n            $.each params, (key, value) =>\n                this.cookie[key] = value\n            $.cookie('stream', JSON.stringify(this.cookie), { expires: 365, path: '/' })\n\n        this.initCookie = ->\n            if $.cookie('stream') isnt undefined\n                this.cookie = JSON.parse($.cookie('stream'))\n            else\n                this.updateCookie({step: 0, search: 0})\n\n        this.run = (action, type, additional = {}) ->\n            this.initCookie() if this.cookie is undefined\n            if not this.initialized\n                $timeout =>\n                    this._run(action, type, additional)\n                , 1000\n            else\n                this._run(action, type, additional)\n\n        this._run = (action, type, additional = {}) ->\n            this.updateCookie({step: this.cookie.step + 1})\n\n            params =\n                action: action\n                type: type\n                step: this.cookie.step\n                google_id: googleClientId()\n                yandex_id: if yaCounter1411783 then yaCounter1411783.getClientID() else ''\n                mobile: if (typeof isMobile is 'undefined') then '0' else '1'\n\n            $.each additional, (key, value) =>\n                params[key] = value\n\n            console.log(action, type, params)\n            if action isnt 'view' then console.log(this.generateEventString(angular.copy(params)))\n            if action isnt 'view' then dataLayerPush\n                event: 'configuration'\n                eventCategory: \"action=#{action}\" + (if type then \"_type=#{type}\" else \"\")\n                eventAction: this.generateEventString(angular.copy(params))\n            Stream.save(params).$promise\n\n        this\n","angular.module 'Egerep'\n    .service 'SubjectService', ->\n        # пары предметов\n        this.pairs = [\n            [1, 2]\n            [3, 4]\n            [6, 7]\n            [8, 9]\n        ]\n\n        this.init = (subjects) ->\n            this.subjects = subjects\n\n        this.pairsControl = (subject_id) ->\n            if subject_id\n                angular.forEach this.subjects, (enabled, id) =>\n                    pair = _.filter this.pairs, (p) ->\n                        p.indexOf(parseInt(subject_id)) isnt -1\n                    pair.push([subject_id]) if not pair.length\n                    this.subjects[id] = false if pair[0].indexOf(parseInt(id)) is -1\n\n        this.selected = (subject_id) ->\n            this.subjects isnt undefined and this.subjects[subject_id] isnt undefined and this.subjects[subject_id]\n\n        this.select = (subject_id) ->\n            this.subjects[subject_id] = if this.subjects[subject_id] then not this.subjects[subject_id] else true\n            this.pairsControl(subject_id)\n\n        this.getSelected = (subjects = null)->\n            ids = []\n            angular.forEach (subjects or this.subjects), (enabled, id) ->\n                ids.push(id) if enabled\n            ids\n\n        this.opacityControl = (id) ->\n            return false if not this.getSelected().length\n            selected_id = parseInt(this.getSelected()[0])\n            pair = _.filter this.pairs, (p) ->\n                p.indexOf(selected_id) isnt -1\n            if not pair.length\n                selected_id != id\n            else\n                pair[0].indexOf(parseInt(id)) is -1\n\n        this\n"],"sourceRoot":"/source/"}